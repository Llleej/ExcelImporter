// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package oidc.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the OIDC module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Account_RetrieveAccountBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_Account_RetrieveAccount");
		return builder;
	}

	public static administration.proxies.Account aCT_Account_RetrieveAccount(IContext context)
	{
		Object result = aCT_Account_RetrieveAccountBuilder().execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Acr_NewBuilder(
		oidc.proxies.Acr _acr,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_Acr_New");
		builder = builder.withParam("Acr", _acr);
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void aCT_Acr_New(
		IContext context,
		oidc.proxies.Acr _acr,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		aCT_Acr_NewBuilder(
				_acr,
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_DecodeIDTokenBuilder(
		oidc.proxies.Token _token
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_DecodeIDToken");
		builder = builder.withParam("Token", _token);
		return builder;
	}

	public static void aCT_DecodeIDToken(
		IContext context,
		oidc.proxies.Token _token
	)
	{
		aCT_DecodeIDTokenBuilder(
				_token
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ImportConfigurationBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_ImportConfiguration");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void aCT_ImportConfiguration(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		aCT_ImportConfigurationBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Microflows_GETCustomMicroflowsListBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_Microflows_GETCustomMicroflowsList");
		return builder;
	}

	public static java.util.List<mxmodelreflection.proxies.Microflows> aCT_Microflows_GETCustomMicroflowsList(IContext context)
	{
		Object result = aCT_Microflows_GETCustomMicroflowsListBuilder().execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> mxmodelreflection.proxies.Microflows.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_NewClaimBuilder(
		oidc.proxies.ClaimSet _claimSet
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_NewClaim");
		builder = builder.withParam("ClaimSet", _claimSet);
		return builder;
	}

	public static void aCT_NewClaim(
		IContext context,
		oidc.proxies.ClaimSet _claimSet
	)
	{
		aCT_NewClaimBuilder(
				_claimSet
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_NewScopeBuilder(
		oidc.proxies.ScopeSet _scopeSet
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_NewScope");
		builder = builder.withParam("ScopeSet", _scopeSet);
		return builder;
	}

	public static void aCT_NewScope(
		IContext context,
		oidc.proxies.ScopeSet _scopeSet
	)
	{
		aCT_NewScopeBuilder(
				_scopeSet
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_RefreshTokenBuilder(
		oidc.proxies.Token _token
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_RefreshToken");
		builder = builder.withParam("Token", _token);
		return builder;
	}

	public static void aCT_RefreshToken(
		IContext context,
		oidc.proxies.Token _token
	)
	{
		aCT_RefreshTokenBuilder(
				_token
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_SaveConfigurationBuilder(
		oidc.proxies.ClientConfigHelper _clientConfigHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_SaveConfiguration");
		builder = builder.withParam("ClientConfigHelper", _clientConfigHelper);
		return builder;
	}

	public static void aCT_SaveConfiguration(
		IContext context,
		oidc.proxies.ClientConfigHelper _clientConfigHelper
	)
	{
		aCT_SaveConfigurationBuilder(
				_clientConfigHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_SetDefaultBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_SetDefault");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void aCT_SetDefault(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		aCT_SetDefaultBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ShowCusomExceptionMessageBuilder(
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _redirectTo
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_ShowCusomExceptionMessage");
		builder = builder.withParam("httpResponse", _httpResponse);
		builder = builder.withParam("redirectTo", _redirectTo);
		return builder;
	}

	public static void aCT_ShowCusomExceptionMessage(
		IContext context,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _redirectTo
	)
	{
		aCT_ShowCusomExceptionMessageBuilder(
				_httpResponse,
				_redirectTo
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ToggleActiveBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_ToggleActive");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void aCT_ToggleActive(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		aCT_ToggleActiveBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Token_CustomATPRetrieveRolesBuilder(
		java.lang.String _accesstoken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.ACT_Token_CustomATPRetrieveRoles");
		builder = builder.withParam("Accesstoken", _accesstoken);
		return builder;
	}

	public static java.util.List<oidc.proxies.Role> aCT_Token_CustomATPRetrieveRoles(
		IContext context,
		java.lang.String _accesstoken
	)
	{
		Object result = aCT_Token_CustomATPRetrieveRolesBuilder(
				_accesstoken
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> oidc.proxies.Role.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aPIAuthenticationBuilder(
		system.proxies.HttpRequest _httpRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.APIAuthentication");
		builder = builder.withParam("HttpRequest", _httpRequest);
		return builder;
	}

	public static system.proxies.User aPIAuthentication(
		IContext context,
		system.proxies.HttpRequest _httpRequest
	)
	{
		Object result = aPIAuthenticationBuilder(
				_httpRequest
			)
			.execute(context);
		return result == null ? null : system.proxies.User.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder bCO_Account_ProcessRolesTokenBuilder(
		administration.proxies.Account _user,
		java.util.List<system.proxies.UserRole> _tokenUserRoleList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.BCO_Account_ProcessRolesToken");
		builder = builder.withParam("User", _user);
		builder = builder.withParam("TokenUserRoleList", _tokenUserRoleList);
		return builder;
	}

	public static boolean bCO_Account_ProcessRolesToken(
		IContext context,
		administration.proxies.Account _user,
		java.util.List<system.proxies.UserRole> _tokenUserRoleList
	)
	{
		Object result = bCO_Account_ProcessRolesTokenBuilder(
				_user,
				_tokenUserRoleList
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder checkNonceValueBuilder(
		oidc.proxies.AuthAttempt _authAttempt,
		java.lang.String _id_token
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.CheckNonceValue");
		builder = builder.withParam("AuthAttempt", _authAttempt);
		builder = builder.withParam("Id_token", _id_token);
		return builder;
	}

	public static boolean checkNonceValue(
		IContext context,
		oidc.proxies.AuthAttempt _authAttempt,
		java.lang.String _id_token
	)
	{
		Object result = checkNonceValueBuilder(
				_authAttempt,
				_id_token
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder cleanupOldAuthAttemptsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.CleanupOldAuthAttempts");
		return builder;
	}

	public static void cleanupOldAuthAttempts(IContext context)
	{
		cleanupOldAuthAttemptsBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder cUSTOM_UserProvisioningBuilder(
		oidc.proxies.Token _oAuthToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.CUSTOM_UserProvisioning");
		builder = builder.withParam("OAuthToken", _oAuthToken);
		return builder;
	}

	public static administration.proxies.Account cUSTOM_UserProvisioning(
		IContext context,
		oidc.proxies.Token _oAuthToken
	)
	{
		Object result = cUSTOM_UserProvisioningBuilder(
				_oAuthToken
			)
			.execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder decodeAndVerifyJWTBuilder(
		oidc.proxies.Token _token
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.DecodeAndVerifyJWT");
		builder = builder.withParam("Token", _token);
		return builder;
	}

	public static java.lang.String decodeAndVerifyJWT(
		IContext context,
		oidc.proxies.Token _token
	)
	{
		Object result = decodeAndVerifyJWTBuilder(
				_token
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder default_Azure_TokenProcessing_CustomATPBuilder(
		java.lang.String _accessToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Default_Azure_TokenProcessing_CustomATP");
		builder = builder.withParam("AccessToken", _accessToken);
		return builder;
	}

	public static java.util.List<oidc.proxies.Role> default_Azure_TokenProcessing_CustomATP(
		IContext context,
		java.lang.String _accessToken
	)
	{
		Object result = default_Azure_TokenProcessing_CustomATPBuilder(
				_accessToken
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> oidc.proxies.Role.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder default_OIDCProvider_TokenProcessing_CustomATPBuilder(
		java.lang.String _accessToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Default_OIDCProvider_TokenProcessing_CustomATP");
		builder = builder.withParam("AccessToken", _accessToken);
		return builder;
	}

	public static java.util.List<oidc.proxies.Role> default_OIDCProvider_TokenProcessing_CustomATP(
		IContext context,
		java.lang.String _accessToken
	)
	{
		Object result = default_OIDCProvider_TokenProcessing_CustomATPBuilder(
				_accessToken
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> oidc.proxies.Role.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder default_PIB_TokenProcessing_CustomATPBuilder(
		java.lang.String _accessToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Default_PIB_TokenProcessing_CustomATP");
		builder = builder.withParam("AccessToken", _accessToken);
		return builder;
	}

	public static java.util.List<oidc.proxies.Role> default_PIB_TokenProcessing_CustomATP(
		IContext context,
		java.lang.String _accessToken
	)
	{
		Object result = default_PIB_TokenProcessing_CustomATPBuilder(
				_accessToken
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> oidc.proxies.Role.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder default_SAM_TokenProcessing_CustomATPBuilder(
		java.lang.String _accessToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Default_SAM_TokenProcessing_CustomATP");
		builder = builder.withParam("AccessToken", _accessToken);
		return builder;
	}

	public static java.util.List<oidc.proxies.Role> default_SAM_TokenProcessing_CustomATP(
		IContext context,
		java.lang.String _accessToken
	)
	{
		Object result = default_SAM_TokenProcessing_CustomATPBuilder(
				_accessToken
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> oidc.proxies.Role.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dELETEBuilder(
		oidc.proxies.Token _token,
		java.lang.String _request,
		java.lang.String _location
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.DELETE");
		builder = builder.withParam("Token", _token);
		builder = builder.withParam("Request", _request);
		builder = builder.withParam("Location", _location);
		return builder;
	}

	public static system.proxies.HttpResponse dELETE(
		IContext context,
		oidc.proxies.Token _token,
		java.lang.String _request,
		java.lang.String _location
	)
	{
		Object result = dELETEBuilder(
				_token,
				_request,
				_location
			)
			.execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dELETEME_ResetScopesBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.DELETEME_ResetScopes");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void dELETEME_ResetScopes(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		dELETEME_ResetScopesBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_ClientConfig_DeleteBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.DS_ClientConfig_Delete");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void dS_ClientConfig_Delete(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		dS_ClientConfig_DeleteBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_ClientConfigHelper_EditBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.DS_ClientConfigHelper_Edit");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void dS_ClientConfigHelper_Edit(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		dS_ClientConfigHelper_EditBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_ClientConfigHelper_NewBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.DS_ClientConfigHelper_New");
		return builder;
	}

	public static void dS_ClientConfigHelper_New(IContext context)
	{
		dS_ClientConfigHelper_NewBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_ClientConfigHelper_ViewBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.DS_ClientConfigHelper_View");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void dS_ClientConfigHelper_View(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		dS_ClientConfigHelper_ViewBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Retrieve_AcrValuesBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.DS_Retrieve_AcrValues");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static java.util.List<oidc.proxies.Acr> dS_Retrieve_AcrValues(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		Object result = dS_Retrieve_AcrValuesBuilder(
				_clientConfiguration
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> oidc.proxies.Acr.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder gETBuilder(
		java.lang.String _request,
		oidc.proxies.Token _token
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.GET");
		builder = builder.withParam("Request", _request);
		builder = builder.withParam("Token", _token);
		return builder;
	}

	public static system.proxies.HttpResponse gET(
		IContext context,
		java.lang.String _request,
		oidc.proxies.Token _token
	)
	{
		Object result = gETBuilder(
				_request,
				_token
			)
			.execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder getAccessTokenBuilder(
		system.proxies.HttpRequest _httpRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.GetAccessToken");
		builder = builder.withParam("HttpRequest", _httpRequest);
		return builder;
	}

	public static java.lang.String getAccessToken(
		IContext context,
		system.proxies.HttpRequest _httpRequest
	)
	{
		Object result = getAccessTokenBuilder(
				_httpRequest
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder getAuthorizationURLBuilder(
		java.lang.String _clientConfigAlias,
		java.lang.String _returnUrl,
		java.lang.String _clientAcrValue,
		java.lang.String _deviceType
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.GetAuthorizationURL");
		builder = builder.withParam("ClientConfigAlias", _clientConfigAlias);
		builder = builder.withParam("ReturnUrl", _returnUrl);
		builder = builder.withParam("ClientAcrValue", _clientAcrValue);
		builder = builder.withParam("DeviceType", _deviceType);
		return builder;
	}

	public static java.lang.String getAuthorizationURL(
		IContext context,
		java.lang.String _clientConfigAlias,
		java.lang.String _returnUrl,
		java.lang.String _clientAcrValue,
		java.lang.String _deviceType
	)
	{
		Object result = getAuthorizationURLBuilder(
				_clientConfigAlias,
				_returnUrl,
				_clientAcrValue,
				_deviceType
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder getCurrentTokenBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.GetCurrentToken");
		return builder;
	}

	public static oidc.proxies.Token getCurrentToken(IContext context)
	{
		Object result = getCurrentTokenBuilder().execute(context);
		return result == null ? null : oidc.proxies.Token.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder getDefaultAuthorizationURLBuilder(
		java.lang.String _returnUrl,
		java.lang.String _deviceType
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.GetDefaultAuthorizationURL");
		builder = builder.withParam("ReturnUrl", _returnUrl);
		builder = builder.withParam("DeviceType", _deviceType);
		return builder;
	}

	public static java.lang.String getDefaultAuthorizationURL(
		IContext context,
		java.lang.String _returnUrl,
		java.lang.String _deviceType
	)
	{
		Object result = getDefaultAuthorizationURLBuilder(
				_returnUrl,
				_deviceType
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder getDefaultClientConfigurationBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.GetDefaultClientConfiguration");
		return builder;
	}

	public static oidc.proxies.ClientConfiguration getDefaultClientConfiguration(IContext context)
	{
		Object result = getDefaultClientConfigurationBuilder().execute(context);
		return result == null ? null : oidc.proxies.ClientConfiguration.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder getNewAccessTokenUsingRefreshTokenBuilder(
		oidc.proxies.Token _token,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.GetNewAccessTokenUsingRefreshToken");
		builder = builder.withParam("Token", _token);
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static boolean getNewAccessTokenUsingRefreshToken(
		IContext context,
		oidc.proxies.Token _token,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		Object result = getNewAccessTokenUsingRefreshTokenBuilder(
				_token,
				_clientConfiguration
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder handleAuthorizationCodeBuilder(
		java.lang.String _code,
		java.lang.String _state,
		java.lang.String _error,
		java.lang.Long _statusCode,
		java.lang.String _error_description
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.handleAuthorizationCode");
		builder = builder.withParam("code", _code);
		builder = builder.withParam("state", _state);
		builder = builder.withParam("error", _error);
		builder = builder.withParam("StatusCode", _statusCode);
		builder = builder.withParam("error_description", _error_description);
		return builder;
	}

	public static administration.proxies.Account handleAuthorizationCode(
		IContext context,
		java.lang.String _code,
		java.lang.String _state,
		java.lang.String _error,
		java.lang.Long _statusCode,
		java.lang.String _error_description
	)
	{
		Object result = handleAuthorizationCodeBuilder(
				_code,
				_state,
				_error,
				_statusCode,
				_error_description
			)
			.execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder loginEndpointBuilder(
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _cont,
		java.lang.String _idp
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.loginEndpoint");
		builder = builder.withParam("httpRequest", _httpRequest);
		builder = builder.withParam("httpResponse", _httpResponse);
		builder = builder.withParam("cont", _cont);
		builder = builder.withParam("idp", _idp);
		return builder;
	}

	public static java.lang.String loginEndpoint(
		IContext context,
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _cont,
		java.lang.String _idp
	)
	{
		Object result = loginEndpointBuilder(
				_httpRequest,
				_httpResponse,
				_cont,
				_idp
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder mergeTokenDataBuilder(
		oidc.proxies.Token _token,
		oidc.proxies.OAuthTokenResponse _tokenResponse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.MergeTokenData");
		builder = builder.withParam("Token", _token);
		builder = builder.withParam("TokenResponse", _tokenResponse);
		return builder;
	}

	public static void mergeTokenData(
		IContext context,
		oidc.proxies.Token _token,
		oidc.proxies.OAuthTokenResponse _tokenResponse
	)
	{
		mergeTokenDataBuilder(
				_token,
				_tokenResponse
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_ClientConfiguration_ChangeMicroflowBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration,
		oidc.proxies.ClientConfigHelper _clientConfigHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.OCH_ClientConfiguration_ChangeMicroflow");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		builder = builder.withParam("ClientConfigHelper", _clientConfigHelper);
		return builder;
	}

	public static void oCH_ClientConfiguration_ChangeMicroflow(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration,
		oidc.proxies.ClientConfigHelper _clientConfigHelper
	)
	{
		oCH_ClientConfiguration_ChangeMicroflowBuilder(
				_clientConfiguration,
				_clientConfigHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pATCHBuilder(
		oidc.proxies.Token _token,
		java.lang.String _request,
		java.lang.String _location
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.PATCH");
		builder = builder.withParam("Token", _token);
		builder = builder.withParam("Request", _request);
		builder = builder.withParam("Location", _location);
		return builder;
	}

	public static system.proxies.HttpResponse pATCH(
		IContext context,
		oidc.proxies.Token _token,
		java.lang.String _request,
		java.lang.String _location
	)
	{
		Object result = pATCHBuilder(
				_token,
				_request,
				_location
			)
			.execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pOSTBuilder(
		java.lang.String _location,
		java.lang.String _request,
		oidc.proxies.Token _token
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.POST");
		builder = builder.withParam("Location", _location);
		builder = builder.withParam("Request", _request);
		builder = builder.withParam("Token", _token);
		return builder;
	}

	public static system.proxies.HttpResponse pOST(
		IContext context,
		java.lang.String _location,
		java.lang.String _request,
		oidc.proxies.Token _token
	)
	{
		Object result = pOSTBuilder(
				_location,
				_request,
				_token
			)
			.execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pUTBuilder(
		java.lang.String _location,
		java.lang.String _request,
		oidc.proxies.Token _token
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.PUT");
		builder = builder.withParam("Location", _location);
		builder = builder.withParam("Request", _request);
		builder = builder.withParam("Token", _token);
		return builder;
	}

	public static system.proxies.HttpResponse pUT(
		IContext context,
		java.lang.String _location,
		java.lang.String _request,
		oidc.proxies.Token _token
	)
	{
		Object result = pUTBuilder(
				_location,
				_request,
				_token
			)
			.execute(context);
		return result == null ? null : system.proxies.HttpResponse.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder startupBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Startup");
		return builder;
	}

	public static boolean startup(IContext context)
	{
		Object result = startupBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ADD_ACRValuesBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_ADD_ACRValues");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void sUB_ADD_ACRValues(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		sUB_ADD_ACRValuesBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ADD_SelectedClaimBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_ADD_SelectedClaim");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void sUB_ADD_SelectedClaim(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		sUB_ADD_SelectedClaimBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ADD_SelectedScopeBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_ADD_SelectedScope");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void sUB_ADD_SelectedScope(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		sUB_ADD_SelectedScopeBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_AutomaticClientCreationBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_AutomaticClientCreation");
		return builder;
	}

	public static void sUB_AutomaticClientCreation(IContext context)
	{
		sUB_AutomaticClientCreationBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_BuildClaimStringBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_BuildClaimString");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static java.lang.String sUB_BuildClaimString(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		Object result = sUB_BuildClaimStringBuilder(
				_clientConfiguration
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_BuildScopeStringBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_BuildScopeString");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static java.lang.String sUB_BuildScopeString(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		Object result = sUB_BuildScopeStringBuilder(
				_clientConfiguration
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ChangeRoleToUserRoleBuilder(
		java.util.List<oidc.proxies.Role> _userRoleListFromToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_ChangeRoleToUserRole");
		builder = builder.withParam("UserRoleListFromToken", _userRoleListFromToken);
		return builder;
	}

	public static java.util.List<system.proxies.UserRole> sUB_ChangeRoleToUserRole(
		IContext context,
		java.util.List<oidc.proxies.Role> _userRoleListFromToken
	)
	{
		Object result = sUB_ChangeRoleToUserRoleBuilder(
				_userRoleListFromToken
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> system.proxies.UserRole.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sub_CheckAccountAndProcessUserRolesBuilder(
		java.util.List<system.proxies.UserRole> _userRoleList,
		java.lang.String _decodedAccessToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Sub_CheckAccountAndProcessUserRoles");
		builder = builder.withParam("UserRoleList", _userRoleList);
		builder = builder.withParam("DecodedAccessToken", _decodedAccessToken);
		return builder;
	}

	public static system.proxies.User sub_CheckAccountAndProcessUserRoles(
		IContext context,
		java.util.List<system.proxies.UserRole> _userRoleList,
		java.lang.String _decodedAccessToken
	)
	{
		Object result = sub_CheckAccountAndProcessUserRolesBuilder(
				_userRoleList,
				_decodedAccessToken
			)
			.execute(context);
		return result == null ? null : system.proxies.User.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Get_ClientAuthenticationMethodBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_Get_ClientAuthenticationMethod");
		return builder;
	}

	public static oidc.proxies.ENU_ClientAuthenticationMethod sUB_Get_ClientAuthenticationMethod(IContext context)
	{
		Object result = sUB_Get_ClientAuthenticationMethodBuilder().execute(context);
		return result == null ? null : oidc.proxies.ENU_ClientAuthenticationMethod.valueOf((java.lang.String) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Get_CustomATPBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_Get_CustomATP");
		return builder;
	}

	public static mxmodelreflection.proxies.Microflows sUB_Get_CustomATP(IContext context)
	{
		Object result = sUB_Get_CustomATPBuilder().execute(context);
		return result == null ? null : mxmodelreflection.proxies.Microflows.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Get_ResponseModeBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_Get_ResponseMode");
		return builder;
	}

	public static oidc.proxies.ENU_ResponseMode sUB_Get_ResponseMode(IContext context)
	{
		Object result = sUB_Get_ResponseModeBuilder().execute(context);
		return result == null ? null : oidc.proxies.ENU_ResponseMode.valueOf((java.lang.String) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Get_UserProvisioningFlowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_Get_UserProvisioningFlow");
		return builder;
	}

	public static oidc.proxies.ENU_UserProvisioningFlows sUB_Get_UserProvisioningFlow(IContext context)
	{
		Object result = sUB_Get_UserProvisioningFlowBuilder().execute(context);
		return result == null ? null : oidc.proxies.ENU_UserProvisioningFlows.valueOf((java.lang.String) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetCallbackURLBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration,
		java.lang.String _deviceType
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_GetCallbackURL");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		builder = builder.withParam("DeviceType", _deviceType);
		return builder;
	}

	public static java.lang.String sUB_GetCallbackURL(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration,
		java.lang.String _deviceType
	)
	{
		Object result = sUB_GetCallbackURLBuilder(
				_clientConfiguration,
				_deviceType
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_GetLogoutURLBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_GetLogoutURL");
		return builder;
	}

	public static java.lang.String sUB_GetLogoutURL(IContext context)
	{
		Object result = sUB_GetLogoutURLBuilder().execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sub_GetUserRoleGUIDBuilder(
		java.util.List<system.proxies.UserRole> _mendixUserRoleList,
		java.lang.String _scope
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Sub_GetUserRoleGUID");
		builder = builder.withParam("MendixUserRoleList", _mendixUserRoleList);
		builder = builder.withParam("Scope", _scope);
		return builder;
	}

	public static java.lang.String sub_GetUserRoleGUID(
		IContext context,
		java.util.List<system.proxies.UserRole> _mendixUserRoleList,
		java.lang.String _scope
	)
	{
		Object result = sub_GetUserRoleGUIDBuilder(
				_mendixUserRoleList,
				_scope
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_RefershModelReflectionBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_RefershModelReflection");
		return builder;
	}

	public static void sUB_RefershModelReflection(IContext context)
	{
		sUB_RefershModelReflectionBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sub_TokenProcessingBuilder(
		java.lang.String _accessToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Sub_TokenProcessing");
		builder = builder.withParam("AccessToken", _accessToken);
		return builder;
	}

	public static java.util.List<communitycommons.proxies.SplitItem> sub_TokenProcessing(
		IContext context,
		java.lang.String _accessToken
	)
	{
		Object result = sub_TokenProcessingBuilder(
				_accessToken
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> communitycommons.proxies.SplitItem.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_UpdateClientConfigutationBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.SUB_UpdateClientConfigutation");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		return builder;
	}

	public static void sUB_UpdateClientConfigutation(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration
	)
	{
		sUB_UpdateClientConfigutationBuilder(
				_clientConfiguration
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sub_ValidateAccessTokenBuilder(
		oidc.proxies.ClientConfiguration _clientConfiguration,
		java.lang.String _accessToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.Sub_ValidateAccessToken");
		builder = builder.withParam("ClientConfiguration", _clientConfiguration);
		builder = builder.withParam("AccessToken", _accessToken);
		return builder;
	}

	public static java.lang.String sub_ValidateAccessToken(
		IContext context,
		oidc.proxies.ClientConfiguration _clientConfiguration,
		java.lang.String _accessToken
	)
	{
		Object result = sub_ValidateAccessTokenBuilder(
				_clientConfiguration,
				_accessToken
			)
			.execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder userProvisioning_SalesforceBuilder(
		oidc.proxies.Token _oAuthToken,
		java.lang.String _openIDTokenJSON
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.UserProvisioning_Salesforce");
		builder = builder.withParam("OAuthToken", _oAuthToken);
		builder = builder.withParam("OpenIDTokenJSON", _openIDTokenJSON);
		return builder;
	}

	public static administration.proxies.Account userProvisioning_Salesforce(
		IContext context,
		oidc.proxies.Token _oAuthToken,
		java.lang.String _openIDTokenJSON
	)
	{
		Object result = userProvisioning_SalesforceBuilder(
				_oAuthToken,
				_openIDTokenJSON
			)
			.execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder userProvisioning_SampleBuilder(
		oidc.proxies.Token _oAuthToken
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.UserProvisioning_Sample");
		builder = builder.withParam("OAuthToken", _oAuthToken);
		return builder;
	}

	public static administration.proxies.Account userProvisioning_Sample(
		IContext context,
		oidc.proxies.Token _oAuthToken
	)
	{
		Object result = userProvisioning_SampleBuilder(
				_oAuthToken
			)
			.execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder userProvisioning_StandardOIDCBuilder(
		oidc.proxies.Token _oAuthToken,
		java.lang.String _openIDTokenJSON
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.UserProvisioning_StandardOIDC");
		builder = builder.withParam("OAuthToken", _oAuthToken);
		builder = builder.withParam("OpenIDTokenJSON", _openIDTokenJSON);
		return builder;
	}

	public static administration.proxies.Account userProvisioning_StandardOIDC(
		IContext context,
		oidc.proxies.Token _oAuthToken,
		java.lang.String _openIDTokenJSON
	)
	{
		Object result = userProvisioning_StandardOIDCBuilder(
				_oAuthToken,
				_openIDTokenJSON
			)
			.execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder userProvisioning_UserInfoBuilder(
		oidc.proxies.Token _oAuthToken,
		java.lang.String _openIDTokenJSON
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.UserProvisioning_UserInfo");
		builder = builder.withParam("OAuthToken", _oAuthToken);
		builder = builder.withParam("OpenIDTokenJSON", _openIDTokenJSON);
		return builder;
	}

	public static administration.proxies.Account userProvisioning_UserInfo(
		IContext context,
		oidc.proxies.Token _oAuthToken,
		java.lang.String _openIDTokenJSON
	)
	{
		Object result = userProvisioning_UserInfoBuilder(
				_oAuthToken,
				_openIDTokenJSON
			)
			.execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder webCallbackBuilder(
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _code,
		java.lang.String _state,
		java.lang.String _error,
		java.lang.String _error_description
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.webCallback");
		builder = builder.withParam("httpRequest", _httpRequest);
		builder = builder.withParam("httpResponse", _httpResponse);
		builder = builder.withParam("code", _code);
		builder = builder.withParam("state", _state);
		builder = builder.withParam("error", _error);
		builder = builder.withParam("error_description", _error_description);
		return builder;
	}

	public static void webCallback(
		IContext context,
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse,
		java.lang.String _code,
		java.lang.String _state,
		java.lang.String _error,
		java.lang.String _error_description
	)
	{
		webCallbackBuilder(
				_httpRequest,
				_httpResponse,
				_code,
				_state,
				_error,
				_error_description
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder webCallback_POSTBuilder(
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("OIDC.webCallback_POST");
		builder = builder.withParam("httpRequest", _httpRequest);
		builder = builder.withParam("httpResponse", _httpResponse);
		return builder;
	}

	public static void webCallback_POST(
		IContext context,
		system.proxies.HttpRequest _httpRequest,
		system.proxies.HttpResponse _httpResponse
	)
	{
		webCallback_POSTBuilder(
				_httpRequest,
				_httpResponse
			)
			.execute(context);
	}
}
