// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package material_management.proxies;

public class TempMaterial implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject tempMaterialMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Material_Management.TempMaterial";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		StockMaterialCode("StockMaterialCode"),
		StockQauntity("StockQauntity"),
		StockLocation("StockLocation"),
		Stockprice("Stockprice"),
		StockCostPerEA("StockCostPerEA"),
		TempMaterial_Material("Material_Management.TempMaterial_Material");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TempMaterial(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected TempMaterial(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject tempMaterialMendixObject)
	{
		if (tempMaterialMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, tempMaterialMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.tempMaterialMendixObject = tempMaterialMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static material_management.proxies.TempMaterial initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new material_management.proxies.TempMaterial(context, mendixObject);
	}

	public static material_management.proxies.TempMaterial load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return material_management.proxies.TempMaterial.initialize(context, mendixObject);
	}

	/**
	 * @return value of StockMaterialCode
	 */
	public final java.lang.String getStockMaterialCode()
	{
		return getStockMaterialCode(getContext());
	}

	/**
	 * @param context
	 * @return value of StockMaterialCode
	 */
	public final java.lang.String getStockMaterialCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.StockMaterialCode.toString());
	}

	/**
	 * Set value of StockMaterialCode
	 * @param stockmaterialcode
	 */
	public final void setStockMaterialCode(java.lang.String stockmaterialcode)
	{
		setStockMaterialCode(getContext(), stockmaterialcode);
	}

	/**
	 * Set value of StockMaterialCode
	 * @param context
	 * @param stockmaterialcode
	 */
	public final void setStockMaterialCode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String stockmaterialcode)
	{
		getMendixObject().setValue(context, MemberNames.StockMaterialCode.toString(), stockmaterialcode);
	}

	/**
	 * @return value of StockQauntity
	 */
	public final java.math.BigDecimal getStockQauntity()
	{
		return getStockQauntity(getContext());
	}

	/**
	 * @param context
	 * @return value of StockQauntity
	 */
	public final java.math.BigDecimal getStockQauntity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.StockQauntity.toString());
	}

	/**
	 * Set value of StockQauntity
	 * @param stockqauntity
	 */
	public final void setStockQauntity(java.math.BigDecimal stockqauntity)
	{
		setStockQauntity(getContext(), stockqauntity);
	}

	/**
	 * Set value of StockQauntity
	 * @param context
	 * @param stockqauntity
	 */
	public final void setStockQauntity(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal stockqauntity)
	{
		getMendixObject().setValue(context, MemberNames.StockQauntity.toString(), stockqauntity);
	}

	/**
	 * @return value of StockLocation
	 */
	public final java.lang.String getStockLocation()
	{
		return getStockLocation(getContext());
	}

	/**
	 * @param context
	 * @return value of StockLocation
	 */
	public final java.lang.String getStockLocation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.StockLocation.toString());
	}

	/**
	 * Set value of StockLocation
	 * @param stocklocation
	 */
	public final void setStockLocation(java.lang.String stocklocation)
	{
		setStockLocation(getContext(), stocklocation);
	}

	/**
	 * Set value of StockLocation
	 * @param context
	 * @param stocklocation
	 */
	public final void setStockLocation(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String stocklocation)
	{
		getMendixObject().setValue(context, MemberNames.StockLocation.toString(), stocklocation);
	}

	/**
	 * @return value of Stockprice
	 */
	public final java.math.BigDecimal getStockprice()
	{
		return getStockprice(getContext());
	}

	/**
	 * @param context
	 * @return value of Stockprice
	 */
	public final java.math.BigDecimal getStockprice(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Stockprice.toString());
	}

	/**
	 * Set value of Stockprice
	 * @param stockprice
	 */
	public final void setStockprice(java.math.BigDecimal stockprice)
	{
		setStockprice(getContext(), stockprice);
	}

	/**
	 * Set value of Stockprice
	 * @param context
	 * @param stockprice
	 */
	public final void setStockprice(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal stockprice)
	{
		getMendixObject().setValue(context, MemberNames.Stockprice.toString(), stockprice);
	}

	/**
	 * @return value of StockCostPerEA
	 */
	public final java.math.BigDecimal getStockCostPerEA()
	{
		return getStockCostPerEA(getContext());
	}

	/**
	 * @param context
	 * @return value of StockCostPerEA
	 */
	public final java.math.BigDecimal getStockCostPerEA(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.StockCostPerEA.toString());
	}

	/**
	 * Set value of StockCostPerEA
	 * @param stockcostperea
	 */
	public final void setStockCostPerEA(java.math.BigDecimal stockcostperea)
	{
		setStockCostPerEA(getContext(), stockcostperea);
	}

	/**
	 * Set value of StockCostPerEA
	 * @param context
	 * @param stockcostperea
	 */
	public final void setStockCostPerEA(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal stockcostperea)
	{
		getMendixObject().setValue(context, MemberNames.StockCostPerEA.toString(), stockcostperea);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of TempMaterial_Material
	 */
	public final material_management.proxies.Material getTempMaterial_Material() throws com.mendix.core.CoreException
	{
		return getTempMaterial_Material(getContext());
	}

	/**
	 * @param context
	 * @return value of TempMaterial_Material
	 * @throws com.mendix.core.CoreException
	 */
	public final material_management.proxies.Material getTempMaterial_Material(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		material_management.proxies.Material result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TempMaterial_Material.toString());
		if (identifier != null) {
			result = material_management.proxies.Material.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of TempMaterial_Material
	 * @param tempmaterial_material
	 */
	public final void setTempMaterial_Material(material_management.proxies.Material tempmaterial_material)
	{
		setTempMaterial_Material(getContext(), tempmaterial_material);
	}

	/**
	 * Set value of TempMaterial_Material
	 * @param context
	 * @param tempmaterial_material
	 */
	public final void setTempMaterial_Material(com.mendix.systemwideinterfaces.core.IContext context, material_management.proxies.Material tempmaterial_material)
	{
		if (tempmaterial_material == null) {
			getMendixObject().setValue(context, MemberNames.TempMaterial_Material.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.TempMaterial_Material.toString(), tempmaterial_material.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return tempMaterialMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final material_management.proxies.TempMaterial that = (material_management.proxies.TempMaterial) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
