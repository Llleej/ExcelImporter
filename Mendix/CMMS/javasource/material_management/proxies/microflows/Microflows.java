// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package material_management.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Material_Management module
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/08
	 * 설명 : Audit 기록 등록 및 WarehouseHIstory, StockCounter, Material 수량 반영
	 * Version 1.0 : 생성
	 * 변경: Validation 추가
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Audit_RegistBuilder(
		java.util.List<material_management.proxies.InventoryAudit> _inventoryAuditList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_Audit_Regist");
		builder = builder.withParam("InventoryAuditList", _inventoryAuditList);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/08
	 * 설명 : Audit 기록 등록 및 WarehouseHIstory, StockCounter, Material 수량 반영
	 * Version 1.0 : 생성
	 * 변경: Validation 추가
	 */
	public static void aCT_Audit_Regist(
		IContext context,
		java.util.List<material_management.proxies.InventoryAudit> _inventoryAuditList
	)
	{
		aCT_Audit_RegistBuilder(
				_inventoryAuditList
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/06
	 * 설명 : 자재 생성
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Material_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_Material_Create");
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/06
	 * 설명 : 자재 생성
	 * Version 1.0 : 생성
	 */
	public static void aCT_Material_Create(IContext context)
	{
		aCT_Material_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Material_DeleteBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_Material_Delete");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	public static void aCT_Material_Delete(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		aCT_Material_DeleteBuilder(
				_material
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/08
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/08
	 * 설명 : 자재수정
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Material_EditBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_Material_Edit");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/08
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/08
	 * 설명 : 자재수정
	 * Version 1.0 : 생성
	 */
	public static void aCT_Material_Edit(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		aCT_Material_EditBuilder(
				_material
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 자재 master 등록 저장, masterlog 등록 or 수정
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Material_EditSaveBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_Material_EditSave");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 자재 master 등록 저장, masterlog 등록 or 수정
	 * Version 1.0 : 생성
	 */
	public static void aCT_Material_EditSave(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		aCT_Material_EditSaveBuilder(
				_material
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 자재 master 등록 저장, masterlog 등록 or 수정
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Material_SaveBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_Material_Save");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 자재 master 등록 저장, masterlog 등록 or 수정
	 * Version 1.0 : 생성
	 */
	public static void aCT_Material_Save(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		aCT_Material_SaveBuilder(
				_material
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/21
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/21
	 * 설명 : Material EDMS Create
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_MaterialEDMS_CreateBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_MaterialEDMS_Create");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/21
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/21
	 * 설명 : Material EDMS Create
	 * Version 1.0 : 생성
	 */
	public static material_management.proxies.MaterialEDMS aCT_MaterialEDMS_Create(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		Object result = aCT_MaterialEDMS_CreateBuilder(
				_material
			)
			.execute(context);
		return result == null ? null : material_management.proxies.MaterialEDMS.initialize(context, (IMendixObject) result);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 자재 master Image 저장
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_MaterialImage_CreateBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_MaterialImage_Create");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 자재 master Image 저장
	 * Version 1.0 : 생성
	 */
	public static material_management.proxies.MaterialImage aCT_MaterialImage_Create(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		Object result = aCT_MaterialImage_CreateBuilder(
				_material
			)
			.execute(context);
		return result == null ? null : material_management.proxies.MaterialImage.initialize(context, (IMendixObject) result);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 이동 자재 리스트 작성
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_MaterialMove_SelectMateriallistBuilder(
		java.util.List<material_management.proxies.Stockcounter> _stockcounterList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_MaterialMove_SelectMateriallist");
		builder = builder.withParam("StockcounterList", _stockcounterList);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 이동 자재 리스트 작성
	 * Version 1.0 : 생성
	 */
	public static void aCT_MaterialMove_SelectMateriallist(
		IContext context,
		java.util.List<material_management.proxies.Stockcounter> _stockcounterList
	)
	{
		aCT_MaterialMove_SelectMateriallistBuilder(
				_stockcounterList
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 자재 변경사항 기록
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_MaterialRevisionRecordBuilder(
		material_management.proxies.Material _material,
		material_management.proxies.MaterialMasterLog _materialMasterLog
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_MaterialRevisionRecord");
		builder = builder.withParam("Material", _material);
		builder = builder.withParam("MaterialMasterLog", _materialMasterLog);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 자재 변경사항 기록
	 * Version 1.0 : 생성
	 */
	public static void aCT_MaterialRevisionRecord(
		IContext context,
		material_management.proxies.Material _material,
		material_management.proxies.MaterialMasterLog _materialMasterLog
	)
	{
		aCT_MaterialRevisionRecordBuilder(
				_material,
				_materialMasterLog
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/08
	 * 설명 : tempmaterial NPE에서 기초 재고 등록
	 * Version 1.0 : 생성
	 * 변경: Validation 추가, Material_Warehouse 삭제
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_MaterialtoWarehouse_RegistBuilder(
		material_management.proxies.WareHouse _wareHouse,
		java.util.List<material_management.proxies.TempMaterial> _tempMaterialList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_MaterialtoWarehouse_Regist");
		builder = builder.withParam("WareHouse", _wareHouse);
		builder = builder.withParam("TempMaterialList", _tempMaterialList);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/08
	 * 설명 : tempmaterial NPE에서 기초 재고 등록
	 * Version 1.0 : 생성
	 * 변경: Validation 추가, Material_Warehouse 삭제
	 */
	public static void aCT_MaterialtoWarehouse_Regist(
		IContext context,
		material_management.proxies.WareHouse _wareHouse,
		java.util.List<material_management.proxies.TempMaterial> _tempMaterialList
	)
	{
		aCT_MaterialtoWarehouse_RegistBuilder(
				_wareHouse,
				_tempMaterialList
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 :  자재 이동 MF
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_MatrialMove_ChangeSaveBuilder(
		material_management.proxies.WareHouse _wareHouse,
		java.util.List<material_management.proxies.TempMaterialMove> _tempMaterialMoveList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_MatrialMove_ChangeSave");
		builder = builder.withParam("WareHouse", _wareHouse);
		builder = builder.withParam("TempMaterialMoveList", _tempMaterialMoveList);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 :  자재 이동 MF
	 * Version 1.0 : 생성
	 */
	public static void aCT_MatrialMove_ChangeSave(
		IContext context,
		material_management.proxies.WareHouse _wareHouse,
		java.util.List<material_management.proxies.TempMaterialMove> _tempMaterialMoveList
	)
	{
		aCT_MatrialMove_ChangeSaveBuilder(
				_wareHouse,
				_tempMaterialMoveList
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/24
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/24
	 * 설명 : 자동계산 표준단가 * 입고량, 수정하여 입고가격을 수정할 수 있음
	 * Version 1.0 : 생성
	 * 
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TempMaterialAutoPriceBuilder(
		material_management.proxies.TempMaterial _tempMaterial
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_TempMaterialAutoPrice");
		builder = builder.withParam("TempMaterial", _tempMaterial);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/24
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/24
	 * 설명 : 자동계산 표준단가 * 입고량, 수정하여 입고가격을 수정할 수 있음
	 * Version 1.0 : 생성
	 * 
	 */
	public static void aCT_TempMaterialAutoPrice(
		IContext context,
		material_management.proxies.TempMaterial _tempMaterial
	)
	{
		aCT_TempMaterialAutoPriceBuilder(
				_tempMaterial
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TempMaterialAutoStockCostperEABuilder(
		material_management.proxies.TempMaterial _tempMaterial
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_TempMaterialAutoStockCostperEA");
		builder = builder.withParam("TempMaterial", _tempMaterial);
		return builder;
	}

	public static void aCT_TempMaterialAutoStockCostperEA(
		IContext context,
		material_management.proxies.TempMaterial _tempMaterial
	)
	{
		aCT_TempMaterialAutoStockCostperEABuilder(
				_tempMaterial
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/26
	 * 설명 : 임시저장된 자재 삭제
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TempWarehouse_ClearBuilder(
		java.util.List<material_management.proxies.TempWarehousing> _tempWarehousingList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_TempWarehouse_Clear");
		builder = builder.withParam("TempWarehousingList", _tempWarehousingList);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/26
	 * 설명 : 임시저장된 자재 삭제
	 * Version 1.0 : 생성
	 */
	public static void aCT_TempWarehouse_Clear(
		IContext context,
		java.util.List<material_management.proxies.TempWarehousing> _tempWarehousingList
	)
	{
		aCT_TempWarehouse_ClearBuilder(
				_tempWarehousingList
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/26
	 * 설명 : 임시등록 자재중 선택된 자재 삭제
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TempWarehouse_DeleteBuilder(
		java.util.List<material_management.proxies.TempWarehousing> _tempWarehousingList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_TempWarehouse_Delete");
		builder = builder.withParam("TempWarehousingList", _tempWarehousingList);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/26
	 * 설명 : 임시등록 자재중 선택된 자재 삭제
	 * Version 1.0 : 생성
	 */
	public static void aCT_TempWarehouse_Delete(
		IContext context,
		java.util.List<material_management.proxies.TempWarehousing> _tempWarehousingList
	)
	{
		aCT_TempWarehouse_DeleteBuilder(
				_tempWarehousingList
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TempWarehousing_AutoCostperEAbyPriceBuilder(
		material_management.proxies.TempWarehousing _tempWarehousing
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_TempWarehousing_AutoCostperEAbyPrice");
		builder = builder.withParam("TempWarehousing", _tempWarehousing);
		return builder;
	}

	public static void aCT_TempWarehousing_AutoCostperEAbyPrice(
		IContext context,
		material_management.proxies.TempWarehousing _tempWarehousing
	)
	{
		aCT_TempWarehousing_AutoCostperEAbyPriceBuilder(
				_tempWarehousing
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TempWarehousing_AutoPriceBuilder(
		material_management.proxies.TempWarehousing _tempWarehousing
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_TempWarehousing_AutoPrice");
		builder = builder.withParam("TempWarehousing", _tempWarehousing);
		return builder;
	}

	public static void aCT_TempWarehousing_AutoPrice(
		IContext context,
		material_management.proxies.TempWarehousing _tempWarehousing
	)
	{
		aCT_TempWarehousing_AutoPriceBuilder(
				_tempWarehousing
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_TempWarehousing_AutoPricebyCostperEABuilder(
		material_management.proxies.TempWarehousing _tempWarehousing
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_TempWarehousing_AutoPricebyCostperEA");
		builder = builder.withParam("TempWarehousing", _tempWarehousing);
		return builder;
	}

	public static void aCT_TempWarehousing_AutoPricebyCostperEA(
		IContext context,
		material_management.proxies.TempWarehousing _tempWarehousing
	)
	{
		aCT_TempWarehousing_AutoPricebyCostperEABuilder(
				_tempWarehousing
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 박재훈
	 * 최종 수정일 : 2023/11/08
	 * 설명 : 임시입고된 자재정보로 자재 히스토리 생성
	 * Version 1.0 : 생성
	 * 변경: 현재고량 입력 상태 checking 추가
	 * 변경: StockCounter 저장추가
	 * 변경: Audit 저장추가
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Warehousing_RegistBuilder(
		java.util.List<material_management.proxies.TempWarehousing> _tempWarehousingList_2,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_Warehousing_Regist");
		builder = builder.withParam("TempWarehousingList_2", _tempWarehousingList_2);
		builder = builder.withParam("WareHouse", _wareHouse);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 박재훈
	 * 최종 수정일 : 2023/11/08
	 * 설명 : 임시입고된 자재정보로 자재 히스토리 생성
	 * Version 1.0 : 생성
	 * 변경: 현재고량 입력 상태 checking 추가
	 * 변경: StockCounter 저장추가
	 * 변경: Audit 저장추가
	 */
	public static void aCT_Warehousing_Regist(
		IContext context,
		java.util.List<material_management.proxies.TempWarehousing> _tempWarehousingList_2,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		aCT_Warehousing_RegistBuilder(
				_tempWarehousingList_2,
				_wareHouse
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/02
	 * 최종 수정자 : 박재훈
	 * 최종 수정일 : 2023/11/02
	 * 설명 : 창고선택된 정보 전달
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Warehousing_WarehouseSelectBuilder(
		material_management.proxies.WareHouse _wareHouse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.ACT_Warehousing_WarehouseSelect");
		builder = builder.withParam("WareHouse", _wareHouse);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/02
	 * 최종 수정자 : 박재훈
	 * 최종 수정일 : 2023/11/02
	 * 설명 : 창고선택된 정보 전달
	 * Version 1.0 : 생성
	 */
	public static void aCT_Warehousing_WarehouseSelect(
		IContext context,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		aCT_Warehousing_WarehouseSelectBuilder(
				_wareHouse
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 김동명
	 * 최초 작성일 : 2023/09/13
	 * 최종 수정자 : 
	 * 최종 수정일 :
	 * 
	 * 설명 : BusinessPartner 객체 생성 SUB MF
	 * 
	 * V1.0 : 최초 작성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder businessPartener_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.BusinessPartener_Create");
		return builder;
	}

	/**
	 * 최초 작성자 : 김동명
	 * 최초 작성일 : 2023/09/13
	 * 최종 수정자 : 
	 * 최종 수정일 :
	 * 
	 * 설명 : BusinessPartner 객체 생성 SUB MF
	 * 
	 * V1.0 : 최초 작성
	 */
	public static material_management.proxies.BusinessPartner businessPartener_Create(IContext context)
	{
		Object result = businessPartener_CreateBuilder().execute(context);
		return result == null ? null : material_management.proxies.BusinessPartner.initialize(context, (IMendixObject) result);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/06
	 * 설명 : 자재 생성 파라매타 이동
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder create_MaterialBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.Create_Material");
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/06
	 * 설명 : 자재 생성 파라매타 이동
	 * Version 1.0 : 생성
	 */
	public static material_management.proxies.Material create_Material(IContext context)
	{
		Object result = create_MaterialBuilder().execute(context);
		return result == null ? null : material_management.proxies.Material.initialize(context, (IMendixObject) result);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 자재 log 생성 파라매타 이동
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder create_MaterialMasterlogBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.Create_MaterialMasterlog");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 자재 log 생성 파라매타 이동
	 * Version 1.0 : 생성
	 */
	public static material_management.proxies.MaterialMasterLog create_MaterialMasterlog(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		Object result = create_MaterialMasterlogBuilder(
				_material
			)
			.execute(context);
		return result == null ? null : material_management.proxies.MaterialMasterLog.initialize(context, (IMendixObject) result);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/02
	 * 최종 수정자 : 박재훈
	 * 최종 수정일 : 2023/11/02
	 * 설명 : warehouse object parameter Page open 용
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder create_WarehouseBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.Create_Warehouse");
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/02
	 * 최종 수정자 : 박재훈
	 * 최종 수정일 : 2023/11/02
	 * 설명 : warehouse object parameter Page open 용
	 * Version 1.0 : 생성
	 */
	public static void create_Warehouse(IContext context)
	{
		create_WarehouseBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_ContainMaterialByEquipmentBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_ContainMaterialByEquipment");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	public static java.util.List<equipment_management.proxies.Equipment> dS_ContainMaterialByEquipment(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		Object result = dS_ContainMaterialByEquipmentBuilder(
				_material
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> equipment_management.proxies.Equipment.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/06
	 * 설명 : 자재정보 조회 리스트 생성
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_MaterialHistoryPerWarehouseBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_MaterialHistoryPerWarehouse");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/06
	 * 설명 : 자재정보 조회 리스트 생성
	 * Version 1.0 : 생성
	 */
	public static java.util.List<material_management.proxies.Stockcounter> dS_MaterialHistoryPerWarehouse(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		Object result = dS_MaterialHistoryPerWarehouseBuilder(
				_material
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> material_management.proxies.Stockcounter.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : TempMaterial에 저장할 리스트 불러오기
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_MaterialInfoManage_TempBuilder(
		material_management.proxies.WareHouse _wareHouse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_MaterialInfoManage_Temp");
		builder = builder.withParam("WareHouse", _wareHouse);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : TempMaterial에 저장할 리스트 불러오기
	 * Version 1.0 : 생성
	 */
	public static java.util.List<material_management.proxies.TempMaterial> dS_MaterialInfoManage_Temp(
		IContext context,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		Object result = dS_MaterialInfoManage_TempBuilder(
				_wareHouse
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> material_management.proxies.TempMaterial.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 창고 트리 노드 불러오기
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_MaterialMove_TreenodeBuilder(
		material_management.proxies.WareHouse _wareHouse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_MaterialMove_Treenode");
		builder = builder.withParam("WareHouse", _wareHouse);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 창고 트리 노드 불러오기
	 * Version 1.0 : 생성
	 */
	public static java.util.List<material_management.proxies.WareHouse> dS_MaterialMove_Treenode(
		IContext context,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		Object result = dS_MaterialMove_TreenodeBuilder(
				_wareHouse
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> material_management.proxies.WareHouse.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 창고 등록을 위한 페이지 열기
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_MaterialtoWarehouseBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_MaterialtoWarehouse");
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 창고 등록을 위한 페이지 열기
	 * Version 1.0 : 생성
	 */
	public static void dS_MaterialtoWarehouse(IContext context)
	{
		dS_MaterialtoWarehouseBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_UsedMaterialByEquipmentBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_UsedMaterialByEquipment");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	public static java.util.List<equipment_management.proxies.Equipment> dS_UsedMaterialByEquipment(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		Object result = dS_UsedMaterialByEquipmentBuilder(
				_material
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> equipment_management.proxies.Equipment.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 창고선택 페이지 열기
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Warehouse_SelectBuilder(
		material_management.proxies.WareHouse _wareHouse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_Warehouse_Select");
		builder = builder.withParam("WareHouse", _wareHouse);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 창고선택 페이지 열기
	 * Version 1.0 : 생성
	 */
	public static void dS_Warehouse_Select(
		IContext context,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		dS_Warehouse_SelectBuilder(
				_wareHouse
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 선택된 창고 불러오기
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Warehouse_SelectedBuilder(
		material_management.proxies.WareHouse _wareHouse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_Warehouse_Selected");
		builder = builder.withParam("WareHouse", _wareHouse);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/01
	 * 설명 : 선택된 창고 불러오기
	 * Version 1.0 : 생성
	 */
	public static void dS_Warehouse_Selected(
		IContext context,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		dS_Warehouse_SelectedBuilder(
				_wareHouse
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/24
	 * 설명 : 창고 Tree보여주기
	 * Version 1.0 : 생성
	 * 변경: 선택된 공장에 대한 Tree만 보여주기
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WarehouseTreeviewBuilder(
		material_management.proxies.WareHouse _wareHouse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_WarehouseTreeview");
		builder = builder.withParam("WareHouse", _wareHouse);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/11/01
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/11/24
	 * 설명 : 창고 Tree보여주기
	 * Version 1.0 : 생성
	 * 변경: 선택된 공장에 대한 Tree만 보여주기
	 */
	public static java.util.List<material_management.proxies.WareHouse> dS_WarehouseTreeview(
		IContext context,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		Object result = dS_WarehouseTreeviewBuilder(
				_wareHouse
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> material_management.proxies.WareHouse.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/26
	 * 설명 : 입고될 창고 선택
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WareHousing_WarehouseSelectorBuilder(
		material_management.proxies.Material _material
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_WareHousing_WarehouseSelector");
		builder = builder.withParam("Material", _material);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/26
	 * 설명 : 입고될 창고 선택
	 * Version 1.0 : 생성
	 */
	public static void dS_WareHousing_WarehouseSelector(
		IContext context,
		material_management.proxies.Material _material
	)
	{
		dS_WareHousing_WarehouseSelectorBuilder(
				_material
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/26
	 * 설명 : 창고 Tree 보여주기
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Warehousing_WarehouseTreeviewBuilder(
		material_management.proxies.WareHouse _wareHouse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.DS_Warehousing_WarehouseTreeview");
		builder = builder.withParam("WareHouse", _wareHouse);
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/10/26
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/10/26
	 * 설명 : 창고 Tree 보여주기
	 * Version 1.0 : 생성
	 */
	public static void dS_Warehousing_WarehouseTreeview(
		IContext context,
		material_management.proxies.WareHouse _wareHouse
	)
	{
		dS_Warehousing_WarehouseTreeviewBuilder(
				_wareHouse
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 자재이동 페이지 생성
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder materialMove_WarehouseCreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Material_Management.MaterialMove_WarehouseCreate");
		return builder;
	}

	/**
	 * 최초 작성자 : 박재훈
	 * 최초 작성일 : 2023/12/04
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/12/04
	 * 설명 : 자재이동 페이지 생성
	 * Version 1.0 : 생성
	 */
	public static void materialMove_WarehouseCreate(IContext context)
	{
		materialMove_WarehouseCreateBuilder().execute(context);
	}
}
