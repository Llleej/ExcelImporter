// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package material_management.proxies;

public class MaterialEDMS extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Material_Management.MaterialEDMS";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		EDMSType("EDMSType"),
		Title("Title"),
		Reference("Reference"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		MaterialEDMS_Material("Material_Management.MaterialEDMS_Material");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MaterialEDMS(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected MaterialEDMS(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject materialEDMSMendixObject)
	{
		super(context, materialEDMSMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, materialEDMSMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static material_management.proxies.MaterialEDMS initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new material_management.proxies.MaterialEDMS(context, mendixObject);
	}

	public static material_management.proxies.MaterialEDMS load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return material_management.proxies.MaterialEDMS.initialize(context, mendixObject);
	}

	public static java.util.List<material_management.proxies.MaterialEDMS> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> material_management.proxies.MaterialEDMS.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Get value of EDMSType
	 * @param edmstype
	 */
	public final material_management.proxies.MaterialEDMSType getEDMSType()
	{
		return getEDMSType(getContext());
	}

	/**
	 * @param context
	 * @return value of EDMSType
	 */
	public final material_management.proxies.MaterialEDMSType getEDMSType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.EDMSType.toString());
		if (obj == null) {
			return null;
		}
		return material_management.proxies.MaterialEDMSType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of EDMSType
	 * @param edmstype
	 */
	public final void setEDMSType(material_management.proxies.MaterialEDMSType edmstype)
	{
		setEDMSType(getContext(), edmstype);
	}

	/**
	 * Set value of EDMSType
	 * @param context
	 * @param edmstype
	 */
	public final void setEDMSType(com.mendix.systemwideinterfaces.core.IContext context, material_management.proxies.MaterialEDMSType edmstype)
	{
		if (edmstype != null) {
			getMendixObject().setValue(context, MemberNames.EDMSType.toString(), edmstype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.EDMSType.toString(), null);
		}
	}

	/**
	 * @return value of Title
	 */
	public final java.lang.String getTitle()
	{
		return getTitle(getContext());
	}

	/**
	 * @param context
	 * @return value of Title
	 */
	public final java.lang.String getTitle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Title.toString());
	}

	/**
	 * Set value of Title
	 * @param title
	 */
	public final void setTitle(java.lang.String title)
	{
		setTitle(getContext(), title);
	}

	/**
	 * Set value of Title
	 * @param context
	 * @param title
	 */
	public final void setTitle(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String title)
	{
		getMendixObject().setValue(context, MemberNames.Title.toString(), title);
	}

	/**
	 * @return value of Reference
	 */
	public final java.lang.String getReference()
	{
		return getReference(getContext());
	}

	/**
	 * @param context
	 * @return value of Reference
	 */
	public final java.lang.String getReference(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Reference.toString());
	}

	/**
	 * Set value of Reference
	 * @param reference
	 */
	public final void setReference(java.lang.String reference)
	{
		setReference(getContext(), reference);
	}

	/**
	 * Set value of Reference
	 * @param context
	 * @param reference
	 */
	public final void setReference(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String reference)
	{
		getMendixObject().setValue(context, MemberNames.Reference.toString(), reference);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of MaterialEDMS_Material
	 */
	public final material_management.proxies.Material getMaterialEDMS_Material() throws com.mendix.core.CoreException
	{
		return getMaterialEDMS_Material(getContext());
	}

	/**
	 * @param context
	 * @return value of MaterialEDMS_Material
	 * @throws com.mendix.core.CoreException
	 */
	public final material_management.proxies.Material getMaterialEDMS_Material(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		material_management.proxies.Material result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MaterialEDMS_Material.toString());
		if (identifier != null) {
			result = material_management.proxies.Material.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of MaterialEDMS_Material
	 * @param materialedms_material
	 */
	public final void setMaterialEDMS_Material(material_management.proxies.Material materialedms_material)
	{
		setMaterialEDMS_Material(getContext(), materialedms_material);
	}

	/**
	 * Set value of MaterialEDMS_Material
	 * @param context
	 * @param materialedms_material
	 */
	public final void setMaterialEDMS_Material(com.mendix.systemwideinterfaces.core.IContext context, material_management.proxies.Material materialedms_material)
	{
		if (materialedms_material == null) {
			getMendixObject().setValue(context, MemberNames.MaterialEDMS_Material.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.MaterialEDMS_Material.toString(), materialedms_material.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final material_management.proxies.MaterialEDMS that = (material_management.proxies.MaterialEDMS) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
