// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package report.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Report module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder monthlyWorkOrdeCount_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Report.MonthlyWorkOrdeCount_Create");
		return builder;
	}

	public static void monthlyWorkOrdeCount_Create(IContext context)
	{
		monthlyWorkOrdeCount_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder monthlyWorkOrdeCount_Create_2Builder(
		report.proxies.DailyWorkOrderCount _dailyWorkOrderCount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Report.MonthlyWorkOrdeCount_Create_2");
		builder = builder.withParam("DailyWorkOrderCount", _dailyWorkOrderCount);
		return builder;
	}

	public static void monthlyWorkOrdeCount_Create_2(
		IContext context,
		report.proxies.DailyWorkOrderCount _dailyWorkOrderCount
	)
	{
		monthlyWorkOrdeCount_Create_2Builder(
				_dailyWorkOrderCount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder weeklyWorkOrdeCount_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Report.WeeklyWorkOrdeCount_Create");
		return builder;
	}

	public static void weeklyWorkOrdeCount_Create(IContext context)
	{
		weeklyWorkOrdeCount_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder weeklyWorkOrdeCount_Create_2Builder(
		report.proxies.DailyWorkOrderCount _dailyWorkOrderCount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Report.WeeklyWorkOrdeCount_Create_2");
		builder = builder.withParam("DailyWorkOrderCount", _dailyWorkOrderCount);
		return builder;
	}

	public static void weeklyWorkOrdeCount_Create_2(
		IContext context,
		report.proxies.DailyWorkOrderCount _dailyWorkOrderCount
	)
	{
		weeklyWorkOrdeCount_Create_2Builder(
				_dailyWorkOrderCount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder workOrdeCount_CrerateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Report.WorkOrdeCount_Crerate");
		return builder;
	}

	public static void workOrdeCount_Crerate(IContext context)
	{
		workOrdeCount_CrerateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder workOrdeCount_Crerate_2Builder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Report.WorkOrdeCount_Crerate_2");
		return builder;
	}

	public static void workOrdeCount_Crerate_2(IContext context)
	{
		workOrdeCount_Crerate_2Builder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder yearlyWorkOrdeCount_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Report.YearlyWorkOrdeCount_Create");
		return builder;
	}

	public static void yearlyWorkOrdeCount_Create(IContext context)
	{
		yearlyWorkOrdeCount_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder yearlyWorkOrdeCount_Create_2Builder(
		report.proxies.DailyWorkOrderCount _dailyWorkOrderCount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Report.YearlyWorkOrdeCount_Create_2");
		builder = builder.withParam("DailyWorkOrderCount", _dailyWorkOrderCount);
		return builder;
	}

	public static void yearlyWorkOrdeCount_Create_2(
		IContext context,
		report.proxies.DailyWorkOrderCount _dailyWorkOrderCount
	)
	{
		yearlyWorkOrdeCount_Create_2Builder(
				_dailyWorkOrderCount
			)
			.execute(context);
	}
}
