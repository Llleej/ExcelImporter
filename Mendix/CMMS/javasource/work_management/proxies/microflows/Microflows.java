// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package work_management.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Work_Management module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_AfterImage_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_AfterImage_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static work_management.proxies.ResultImage aCT_AfterImage_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		Object result = aCT_AfterImage_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
		return result == null ? null : work_management.proxies.ResultImage.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_BeforeImage_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_BeforeImage_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static work_management.proxies.ResultImage aCT_BeforeImage_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		Object result = aCT_BeforeImage_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
		return result == null ? null : work_management.proxies.ResultImage.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_CreateWorkersBuilder(
		cmms_administration.proxies.User _user,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_CreateWorkers");
		builder = builder.withParam("User", _user);
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_CreateWorkers(
		IContext context,
		cmms_administration.proxies.User _user,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_CreateWorkersBuilder(
				_user,
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ETCCost_AllSaveBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_ETCCost_AllSave");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_ETCCost_AllSave(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_ETCCost_AllSaveBuilder(
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ETCCost_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_ETCCost_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_ETCCost_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_ETCCost_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
	}
	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/07
	 * 설명 : workorder kanban 팝업에서 완료버튼을 누를 시, 작업중 상태라면 show message 전달
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Execute_To_CompleteBuilder(
		commons.proxies.StandardCode _standardCode,
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Execute_To_Complete");
		builder = builder.withParam("StandardCode", _standardCode);
		builder = builder.withParam("WorkOrder", _workOrder);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		return builder;
	}

	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/07
	 * 설명 : workorder kanban 팝업에서 완료버튼을 누를 시, 작업중 상태라면 show message 전달
	 * Version 1.0 : 생성
	 */
	public static void aCT_Execute_To_Complete(
		IContext context,
		commons.proxies.StandardCode _standardCode,
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		aCT_Execute_To_CompleteBuilder(
				_standardCode,
				_workOrder,
				_workBoardCountHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Filter_Check_DepartmentBuilder(
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Filter_Check_Department");
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void aCT_Filter_Check_Department(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		aCT_Filter_Check_DepartmentBuilder(
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Filter_Check_UserBuilder(
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Filter_Check_User");
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void aCT_Filter_Check_User(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		aCT_Filter_Check_UserBuilder(
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Filter_Delete_DepartmentBuilder(
		work_management.proxies.DepartmentHelper _departmentHelper,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Filter_Delete_Department");
		builder = builder.withParam("DepartmentHelper", _departmentHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void aCT_Filter_Delete_Department(
		IContext context,
		work_management.proxies.DepartmentHelper _departmentHelper,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		aCT_Filter_Delete_DepartmentBuilder(
				_departmentHelper,
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Filter_Delete_EquipmentBuilder(
		work_management.proxies.EquipmentHelper _equipmentHelper,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Filter_Delete_Equipment");
		builder = builder.withParam("EquipmentHelper", _equipmentHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void aCT_Filter_Delete_Equipment(
		IContext context,
		work_management.proxies.EquipmentHelper _equipmentHelper,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		aCT_Filter_Delete_EquipmentBuilder(
				_equipmentHelper,
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Filter_Delete_UserBuilder(
		work_management.proxies.UserHelper _userHelper,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Filter_Delete_User");
		builder = builder.withParam("UserHelper", _userHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void aCT_Filter_Delete_User(
		IContext context,
		work_management.proxies.UserHelper _userHelper,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		aCT_Filter_Delete_UserBuilder(
				_userHelper,
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Filter_SaveBuilder(
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Filter_Save");
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void aCT_Filter_Save(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		aCT_Filter_SaveBuilder(
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Partners_AllSaveBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Partners_AllSave");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_Partners_AllSave(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_Partners_AllSaveBuilder(
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Partners_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Partners_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_Partners_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_Partners_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ResultFile_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_ResultFile_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static work_management.proxies.ResultFile aCT_ResultFile_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		Object result = aCT_ResultFile_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
		return result == null ? null : work_management.proxies.ResultFile.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Tasks_AllSaveBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Tasks_AllSave");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_Tasks_AllSave(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_Tasks_AllSaveBuilder(
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Tasks_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Tasks_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static work_management.proxies.WorkOrderTasks aCT_Tasks_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		Object result = aCT_Tasks_CreateBuilder(
				_workOrderResult,
				_workOrder
			)
			.execute(context);
		return result == null ? null : work_management.proxies.WorkOrderTasks.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Tasks_DeleteBuilder(
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Tasks_Delete");
		builder = builder.withParam("WorkOrderTasks", _workOrderTasks);
		return builder;
	}

	public static void aCT_Tasks_Delete(
		IContext context,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		aCT_Tasks_DeleteBuilder(
				_workOrderTasks
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Tasks_EditBuilder(
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Tasks_Edit");
		builder = builder.withParam("WorkOrderTasks", _workOrderTasks);
		return builder;
	}

	public static void aCT_Tasks_Edit(
		IContext context,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		aCT_Tasks_EditBuilder(
				_workOrderTasks
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_UsedMaterial_AddBuilder(
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_UsedMaterial_Add");
		builder = builder.withParam("WorkOrderTasks", _workOrderTasks);
		return builder;
	}

	public static void aCT_UsedMaterial_Add(
		IContext context,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		aCT_UsedMaterial_AddBuilder(
				_workOrderTasks
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_UsedMaterial_DeleteBuilder(
		work_management.proxies.WorkOrderMaterials _workOrderMaterials
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_UsedMaterial_Delete");
		builder = builder.withParam("WorkOrderMaterials", _workOrderMaterials);
		return builder;
	}

	public static void aCT_UsedMaterial_Delete(
		IContext context,
		work_management.proxies.WorkOrderMaterials _workOrderMaterials
	)
	{
		aCT_UsedMaterial_DeleteBuilder(
				_workOrderMaterials
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_UsedMaterial_EditBuilder(
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_UsedMaterial_Edit");
		builder = builder.withParam("WorkOrderTasks", _workOrderTasks);
		return builder;
	}

	public static void aCT_UsedMaterial_Edit(
		IContext context,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		aCT_UsedMaterial_EditBuilder(
				_workOrderTasks
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_UsedMaterial_SaveBuilder(
		java.util.List<work_management.proxies.UsedMaterialHelper> _usedMaterialHelperList,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_UsedMaterial_Save");
		builder = builder.withParam("UsedMaterialHelperList", _usedMaterialHelperList);
		builder = builder.withParam("WorkOrderTasks", _workOrderTasks);
		return builder;
	}

	public static void aCT_UsedMaterial_Save(
		IContext context,
		java.util.List<work_management.proxies.UsedMaterialHelper> _usedMaterialHelperList,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		aCT_UsedMaterial_SaveBuilder(
				_usedMaterialHelperList,
				_workOrderTasks
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkApproval_ApproveBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkApproval_Approve");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkApproval_Approve(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkApproval_ApproveBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkApproval_RejectBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkApproval_Reject");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkApproval_Reject(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkApproval_RejectBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkAssignemt_UpdateBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkAssignemt_Update");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkAssignemt_Update(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkAssignemt_UpdateBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Workers_AllSaveBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Workers_AllSave");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_Workers_AllSave(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_Workers_AllSaveBuilder(
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Workers_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Workers_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_Workers_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_Workers_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Workers_DeleteBuilder(
		work_management.proxies.WorkOrderWorkers _workOrderWorkers
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Workers_Delete");
		builder = builder.withParam("WorkOrderWorkers", _workOrderWorkers);
		return builder;
	}

	public static void aCT_Workers_Delete(
		IContext context,
		work_management.proxies.WorkOrderWorkers _workOrderWorkers
	)
	{
		aCT_Workers_DeleteBuilder(
				_workOrderWorkers
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Workers_SaveBuilder(
		work_management.proxies.WorkOrderWorkers _workOrderWorkers,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_Workers_Save");
		builder = builder.withParam("WorkOrderWorkers", _workOrderWorkers);
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_Workers_Save(
		IContext context,
		work_management.proxies.WorkOrderWorkers _workOrderWorkers,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_Workers_SaveBuilder(
				_workOrderWorkers,
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkExecution_CreateBuilder(
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkExecution_Create");
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	public static void aCT_WorkExecution_Create(
		IContext context,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		aCT_WorkExecution_CreateBuilder(
				_workOrderPageHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkOrder_EditBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkOrder_Edit");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkOrder_Edit(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkOrder_EditBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkOrder_NewAssignBuilder(
		commons.proxies.StandardCode _standardCode,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkOrder_NewAssign");
		builder = builder.withParam("StandardCode", _standardCode);
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkOrder_NewAssign(
		IContext context,
		commons.proxies.StandardCode _standardCode,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkOrder_NewAssignBuilder(
				_standardCode,
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkOrder_SaveBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkOrder_Save");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkOrder_Save(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkOrder_SaveBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkOrderTasks_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkOrderTasks_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void aCT_WorkOrderTasks_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		aCT_WorkOrderTasks_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_ApproveBuilder(
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Approve");
		builder = builder.withParam("WorkOrder", _workOrder);
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	public static void aCT_WorkRequest_Approve(
		IContext context,
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		aCT_WorkRequest_ApproveBuilder(
				_workOrder,
				_workOrderPageHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_Approve_SaveBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Approve_Save");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkRequest_Approve_Save(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkRequest_Approve_SaveBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_AssignBuilder(
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Assign");
		builder = builder.withParam("WorkOrder", _workOrder);
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	public static void aCT_WorkRequest_Assign(
		IContext context,
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		aCT_WorkRequest_AssignBuilder(
				_workOrder,
				_workOrderPageHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_CopyBuilder(
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Copy");
		builder = builder.withParam("WorkOrder", _workOrder);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	public static void aCT_WorkRequest_Copy(
		IContext context,
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		aCT_WorkRequest_CopyBuilder(
				_workOrder,
				_workBoardCountHelper,
				_workOrderPageHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_CreateBuilder(
		work_management.proxies.WorkOrderPageHelper _workOrderPageSearchHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Create");
		builder = builder.withParam("WorkOrderPageSearchHelper", _workOrderPageSearchHelper);
		return builder;
	}

	public static void aCT_WorkRequest_Create(
		IContext context,
		work_management.proxies.WorkOrderPageHelper _workOrderPageSearchHelper
	)
	{
		aCT_WorkRequest_CreateBuilder(
				_workOrderPageSearchHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_DeleteBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Delete");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkRequest_Delete(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkRequest_DeleteBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_EditBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Edit");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkRequest_Edit(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkRequest_EditBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_Reject_SaveBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Reject_Save");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkRequest_Reject_Save(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkRequest_Reject_SaveBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_WorkRequest_UpdateBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.ACT_WorkRequest_Update");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void aCT_WorkRequest_Update(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		aCT_WorkRequest_UpdateBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Detail_WorkOrderToShowBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_Detail_WorkOrderToShow");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static work_management.proxies.WorkOrderToShow dS_Detail_WorkOrderToShow(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		Object result = dS_Detail_WorkOrderToShowBuilder(
				_workOrder
			)
			.execute(context);
		return result == null ? null : work_management.proxies.WorkOrderToShow.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_FieldPhoto_CreateBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_FieldPhoto_Create");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static work_management.proxies.FieldPhoto dS_FieldPhoto_Create(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		Object result = dS_FieldPhoto_CreateBuilder(
				_workOrder
			)
			.execute(context);
		return result == null ? null : work_management.proxies.FieldPhoto.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_LoginEmployeePlant_RetrieveBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_LoginEmployeePlant_Retrieve");
		return builder;
	}

	public static cmms_administration.proxies.Plant dS_LoginEmployeePlant_Retrieve(IContext context)
	{
		Object result = dS_LoginEmployeePlant_RetrieveBuilder().execute(context);
		return result == null ? null : cmms_administration.proxies.Plant.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_RequestChart_CreateBuilder(
		work_management.proxies.WorkOrderCount _workOrderCount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_RequestChart_Create");
		builder = builder.withParam("WorkOrderCount", _workOrderCount);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkChart> dS_RequestChart_Create(
		IContext context,
		work_management.proxies.WorkOrderCount _workOrderCount
	)
	{
		Object result = dS_RequestChart_CreateBuilder(
				_workOrderCount
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkChart.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Selected_EquipmentHelperBuilder(
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_Selected_EquipmentHelper");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.EquipmentHelper> dS_Selected_EquipmentHelper(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		Object result = dS_Selected_EquipmentHelperBuilder(
				_datePickHelper,
				_filterHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.EquipmentHelper.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_StandardCode_RetrieveBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_StandardCode_Retrieve");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static commons.proxies.StandardCode dS_StandardCode_Retrieve(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		Object result = dS_StandardCode_RetrieveBuilder(
				_workOrder
			)
			.execute(context);
		return result == null ? null : commons.proxies.StandardCode.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_UsedMaterialStockcount_RetrieveBuilder(
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_UsedMaterialStockcount_Retrieve");
		builder = builder.withParam("WorkOrderTasks", _workOrderTasks);
		return builder;
	}

	public static java.util.List<work_management.proxies.UsedMaterialHelper> dS_UsedMaterialStockcount_Retrieve(
		IContext context,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		Object result = dS_UsedMaterialStockcount_RetrieveBuilder(
				_workOrderTasks
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.UsedMaterialHelper.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_User_SearchBuilder(
		cmms_administration.proxies.UserSearchHelper _userSearchHelper,
		cmms_administration.proxies.Plant _plant
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_User_Search");
		builder = builder.withParam("UserSearchHelper", _userSearchHelper);
		builder = builder.withParam("Plant", _plant);
		return builder;
	}

	public static void dS_User_Search(
		IContext context,
		cmms_administration.proxies.UserSearchHelper _userSearchHelper,
		cmms_administration.proxies.Plant _plant
	)
	{
		dS_User_SearchBuilder(
				_userSearchHelper,
				_plant
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkAfterImage_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkAfterImage_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static work_management.proxies.ResultImage dS_WorkAfterImage_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		Object result = dS_WorkAfterImage_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
		return result == null ? null : work_management.proxies.ResultImage.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkApproval_EditBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkApproval_Edit");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void dS_WorkApproval_Edit(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		dS_WorkApproval_EditBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkAssginment_EditBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkAssginment_Edit");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void dS_WorkAssginment_Edit(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		dS_WorkAssginment_EditBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkAssignment_AssignBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkAssignment_Assign");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void dS_WorkAssignment_Assign(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		dS_WorkAssignment_AssignBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkAssignment_CreateBuilder(
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkAssignment_Create");
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	public static void dS_WorkAssignment_Create(
		IContext context,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		dS_WorkAssignment_CreateBuilder(
				_workOrderPageHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkBeforeImage_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkBeforeImage_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static work_management.proxies.ResultImage dS_WorkBeforeImage_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		Object result = dS_WorkBeforeImage_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
		return result == null ? null : work_management.proxies.ResultImage.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkBoardCountHelperBuilder(
		cmms_administration.proxies.Plant _plant,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkOrderPageHelper _workOrderPageSearchHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkBoardCountHelper");
		builder = builder.withParam("Plant", _plant);
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkOrderPageSearchHelper", _workOrderPageSearchHelper);
		return builder;
	}

	public static work_management.proxies.WorkBoardCountHelper dS_WorkBoardCountHelper(
		IContext context,
		cmms_administration.proxies.Plant _plant,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkOrderPageHelper _workOrderPageSearchHelper
	)
	{
		Object result = dS_WorkBoardCountHelperBuilder(
				_plant,
				_datePickHelper,
				_filterHelper,
				_workOrderPageSearchHelper
			)
			.execute(context);
		return result == null ? null : work_management.proxies.WorkBoardCountHelper.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkChartDailyComplete_CreateBuilder(
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkChartDailyComplete_Create");
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkChart> dS_WorkChartDailyComplete_Create(
		IContext context,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		Object result = dS_WorkChartDailyComplete_CreateBuilder(
				_workOrderPageHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkChart.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkChartDailyProcessing_CreateBuilder(
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkChartDailyProcessing_Create");
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkChart> dS_WorkChartDailyProcessing_Create(
		IContext context,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		Object result = dS_WorkChartDailyProcessing_CreateBuilder(
				_workOrderPageHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkChart.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Workers_RetrieveBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_Workers_Retrieve");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrderWorkers> dS_Workers_Retrieve(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		Object result = dS_Workers_RetrieveBuilder(
				_workOrderResult,
				_workOrder
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrderWorkers.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkExecution_EditBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkExecution_Edit");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void dS_WorkExecution_Edit(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		dS_WorkExecution_EditBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkExecution_ExecuteBuilder(
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkExecution_Execute");
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void dS_WorkExecution_Execute(
		IContext context,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		dS_WorkExecution_ExecuteBuilder(
				_workOrderPageHelper,
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkExecution_Execute_For_CalendarBuilder(
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkExecution_Execute_For_Calendar");
		builder = builder.withParam("WorkOrder", _workOrder);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		return builder;
	}

	public static void dS_WorkExecution_Execute_For_Calendar(
		IContext context,
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		dS_WorkExecution_Execute_For_CalendarBuilder(
				_workOrder,
				_workBoardCountHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkHistory_RetrieveBuilder(
		work_management.proxies.Work_Log_DataGrid _paging
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkHistory_Retrieve");
		builder = builder.withParam("Paging", _paging);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkHistory> dS_WorkHistory_Retrieve(
		IContext context,
		work_management.proxies.Work_Log_DataGrid _paging
	)
	{
		Object result = dS_WorkHistory_RetrieveBuilder(
				_paging
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkHistory.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_ApprovalListBuilder(
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_ApprovalList");
		builder = builder.withParam("Employee", _employee);
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_ApprovalList(
		IContext context,
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		Object result = dS_WorkOrder_ApprovalListBuilder(
				_employee,
				_workOrderPageHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_ApproveBuilder(
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Approve");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_Approve(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		Object result = dS_WorkOrder_ApproveBuilder(
				_datePickHelper,
				_filterHelper,
				_workBoardCountHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_AssignmentBuilder(
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Assignment");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_Assignment(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		Object result = dS_WorkOrder_AssignmentBuilder(
				_datePickHelper,
				_filterHelper,
				_workBoardCountHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_AssignmentListBuilder(
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_AssignmentList");
		builder = builder.withParam("Employee", _employee);
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_AssignmentList(
		IContext context,
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		Object result = dS_WorkOrder_AssignmentListBuilder(
				_employee,
				_workOrderPageHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_CalendarBuilder(
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Calendar");
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_Calendar(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		Object result = dS_WorkOrder_CalendarBuilder(
				_filterHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_CompletionBuilder(
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Completion");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_Completion(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		Object result = dS_WorkOrder_CompletionBuilder(
				_datePickHelper,
				_filterHelper,
				_workBoardCountHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_CompletionListBuilder(
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_CompletionList");
		builder = builder.withParam("Employee", _employee);
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_CompletionList(
		IContext context,
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		Object result = dS_WorkOrder_CompletionListBuilder(
				_employee,
				_workOrderPageHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_CountBuilder(
		work_management.proxies.WorkOrderPageHelper _workOrderPageSearchHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Count");
		builder = builder.withParam("WorkOrderPageSearchHelper", _workOrderPageSearchHelper);
		return builder;
	}

	public static work_management.proxies.WorkOrderCount dS_WorkOrder_Count(
		IContext context,
		work_management.proxies.WorkOrderPageHelper _workOrderPageSearchHelper
	)
	{
		Object result = dS_WorkOrder_CountBuilder(
				_workOrderPageSearchHelper
			)
			.execute(context);
		return result == null ? null : work_management.proxies.WorkOrderCount.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_CreateBuilder(
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper,
		cmms_administration.proxies.Plant _plant
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Create");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		builder = builder.withParam("Plant", _plant);
		return builder;
	}

	public static work_management.proxies.WorkOrder dS_WorkOrder_Create(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper,
		cmms_administration.proxies.Plant _plant
	)
	{
		Object result = dS_WorkOrder_CreateBuilder(
				_datePickHelper,
				_workBoardCountHelper,
				_plant
			)
			.execute(context);
		return result == null ? null : work_management.proxies.WorkOrder.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_ExecutionBuilder(
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Execution");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_Execution(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		Object result = dS_WorkOrder_ExecutionBuilder(
				_datePickHelper,
				_filterHelper,
				_workBoardCountHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_ExecutionListBuilder(
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_ExecutionList");
		builder = builder.withParam("Employee", _employee);
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_ExecutionList(
		IContext context,
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		Object result = dS_WorkOrder_ExecutionListBuilder(
				_employee,
				_workOrderPageHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_ListBuilder(
		cmms_administration.proxies.Plant _plant
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_List");
		builder = builder.withParam("Plant", _plant);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_List(
		IContext context,
		cmms_administration.proxies.Plant _plant
	)
	{
		Object result = dS_WorkOrder_ListBuilder(
				_plant
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_PlanningBuilder(
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Planning");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_Planning(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		Object result = dS_WorkOrder_PlanningBuilder(
				_datePickHelper,
				_filterHelper,
				_workBoardCountHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_RequestBuilder(
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_Request");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_Request(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper,
		work_management.proxies.FilterHelper _filterHelper,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper
	)
	{
		Object result = dS_WorkOrder_RequestBuilder(
				_datePickHelper,
				_filterHelper,
				_workBoardCountHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrder_RequestListBuilder(
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrder_RequestList");
		builder = builder.withParam("Employee", _employee);
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	/**
	 * 최초 작성자 : 박성안
	 * 최초 작성일 : 2023/12/08
	 * 설명 : workorder requestlist 내요청 클릭 시 내요청만 반환하는 DS mf
	 * Version 1.0 : 생성
	 */
	public static java.util.List<work_management.proxies.WorkOrder> dS_WorkOrder_RequestList(
		IContext context,
		cmms_administration.proxies.Employee _employee,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		Object result = dS_WorkOrder_RequestListBuilder(
				_employee,
				_workOrderPageHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrderPageHelper_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrderPageHelper_Create");
		return builder;
	}

	public static work_management.proxies.WorkOrderPageHelper dS_WorkOrderPageHelper_Create(IContext context)
	{
		Object result = dS_WorkOrderPageHelper_CreateBuilder().execute(context);
		return result == null ? null : work_management.proxies.WorkOrderPageHelper.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrderResult_RetrieveBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrderResult_Retrieve");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static work_management.proxies.WorkOrderResult dS_WorkOrderResult_Retrieve(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		Object result = dS_WorkOrderResult_RetrieveBuilder(
				_workOrder
			)
			.execute(context);
		return result == null ? null : work_management.proxies.WorkOrderResult.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrderTasks_CreateBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrderTasks_Create");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static work_management.proxies.WorkOrderTasks dS_WorkOrderTasks_Create(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		Object result = dS_WorkOrderTasks_CreateBuilder(
				_workOrderResult
			)
			.execute(context);
		return result == null ? null : work_management.proxies.WorkOrderTasks.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkOrderTasks_RetrieveBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkOrderTasks_Retrieve");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrderTasks> dS_WorkOrderTasks_Retrieve(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		Object result = dS_WorkOrderTasks_RetrieveBuilder(
				_workOrderResult
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrderTasks.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkStatus_RetrieveBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.DS_WorkStatus_Retrieve");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static commons.proxies.StandardCode dS_WorkStatus_Retrieve(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		Object result = dS_WorkStatus_RetrieveBuilder(
				_workOrder
			)
			.execute(context);
		return result == null ? null : commons.proxies.StandardCode.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder microflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.Microflow");
		return builder;
	}

	public static void microflow(IContext context)
	{
		microflowBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_DatePickHelper_ActiveBuilder(
		work_management.proxies.DatePickHelper _datePickHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.OCH_DatePickHelper_Active");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		return builder;
	}

	public static void oCH_DatePickHelper_Active(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper
	)
	{
		oCH_DatePickHelper_ActiveBuilder(
				_datePickHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCH_WorkOrder_CalenderBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.OCH_WorkOrder_Calender");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void oCH_WorkOrder_Calender(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		oCH_WorkOrder_CalenderBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCK_Calendar_Status_EditBuilder(
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.OCK_Calendar_Status_Edit");
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void oCK_Calendar_Status_Edit(
		IContext context,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		oCK_Calendar_Status_EditBuilder(
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oEN_WorkOrder_Filter_DepartmentBuilder(
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.OEN_WorkOrder_Filter_Department");
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void oEN_WorkOrder_Filter_Department(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		oEN_WorkOrder_Filter_DepartmentBuilder(
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oEN_WorkOrder_Filter_EquipmentBuilder(
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.OEN_WorkOrder_Filter_Equipment");
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void oEN_WorkOrder_Filter_Equipment(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		oEN_WorkOrder_Filter_EquipmentBuilder(
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oEN_WorkOrder_Filter_UserBuilder(
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.OEN_WorkOrder_Filter_User");
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static void oEN_WorkOrder_Filter_User(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		oEN_WorkOrder_Filter_UserBuilder(
				_filterHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder plant_TempBuilder(
		work_management.proxies.DatePickHelper _datePickHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.Plant_Temp");
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		return builder;
	}

	public static cmms_administration.proxies.Plant plant_Temp(
		IContext context,
		work_management.proxies.DatePickHelper _datePickHelper
	)
	{
		Object result = plant_TempBuilder(
				_datePickHelper
			)
			.execute(context);
		return result == null ? null : cmms_administration.proxies.Plant.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_DepartmentFilter_ListBuilder(
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_DepartmentFilter_List");
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkOrderList", _workOrderList);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> sUB_DepartmentFilter_List(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		Object result = sUB_DepartmentFilter_ListBuilder(
				_filterHelper,
				_workOrderList
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_EquipmentFilter_ListBuilder(
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_EquipmentFilter_List");
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkOrderList", _workOrderList);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> sUB_EquipmentFilter_List(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		Object result = sUB_EquipmentFilter_ListBuilder(
				_filterHelper,
				_workOrderList
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Tasks_SaveBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_Tasks_Save");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		builder = builder.withParam("WorkOrderTasks", _workOrderTasks);
		return builder;
	}

	public static void sUB_Tasks_Save(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult,
		work_management.proxies.WorkOrderTasks _workOrderTasks
	)
	{
		sUB_Tasks_SaveBuilder(
				_workOrderResult,
				_workOrderTasks
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_UserFilter_ListBuilder(
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_UserFilter_List");
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkOrderList", _workOrderList);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> sUB_UserFilter_List(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		Object result = sUB_UserFilter_ListBuilder(
				_filterHelper,
				_workOrderList
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkBoard_CountBuilder(
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList,
		work_management.proxies.DatePickHelper _datePickHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkBoard_Count");
		builder = builder.withParam("WorkBoardCountHelper", _workBoardCountHelper);
		builder = builder.withParam("WorkOrderList", _workOrderList);
		builder = builder.withParam("DatePickHelper", _datePickHelper);
		return builder;
	}

	public static void sUB_WorkBoard_Count(
		IContext context,
		work_management.proxies.WorkBoardCountHelper _workBoardCountHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList,
		work_management.proxies.DatePickHelper _datePickHelper
	)
	{
		sUB_WorkBoard_CountBuilder(
				_workBoardCountHelper,
				_workOrderList,
				_datePickHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkComplete_ErrorLogBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkComplete_ErrorLog");
		return builder;
	}

	public static void sUB_WorkComplete_ErrorLog(IContext context)
	{
		sUB_WorkComplete_ErrorLogBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkComplete_TaskQueueBuilder(
		work_management.proxies.WorkOrderResult _workOrderResult,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkComplete_TaskQueue");
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		builder = builder.withParam("WorkOrder", _workOrder);
		return builder;
	}

	public static void sUB_WorkComplete_TaskQueue(
		IContext context,
		work_management.proxies.WorkOrderResult _workOrderResult,
		work_management.proxies.WorkOrder _workOrder
	)
	{
		sUB_WorkComplete_TaskQueueBuilder(
				_workOrderResult,
				_workOrder
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkLog_SaveBuilder(
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkLog_Save");
		builder = builder.withParam("WorkOrder", _workOrder);
		builder = builder.withParam("WorkOrderResult", _workOrderResult);
		return builder;
	}

	public static void sUB_WorkLog_Save(
		IContext context,
		work_management.proxies.WorkOrder _workOrder,
		work_management.proxies.WorkOrderResult _workOrderResult
	)
	{
		sUB_WorkLog_SaveBuilder(
				_workOrder,
				_workOrderResult
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkOrder_Except_Priority_FilterBuilder(
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkOrder_Except_Priority_Filter");
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkOrderList", _workOrderList);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> sUB_WorkOrder_Except_Priority_Filter(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		Object result = sUB_WorkOrder_Except_Priority_FilterBuilder(
				_filterHelper,
				_workOrderList
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkOrder_FilterBuilder(
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkOrder_Filter");
		builder = builder.withParam("FilterHelper", _filterHelper);
		builder = builder.withParam("WorkOrderList", _workOrderList);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> sUB_WorkOrder_Filter(
		IContext context,
		work_management.proxies.FilterHelper _filterHelper,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList
	)
	{
		Object result = sUB_WorkOrder_FilterBuilder(
				_filterHelper,
				_workOrderList
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkOrder_Priority_FilterBuilder(
		java.util.List<work_management.proxies.WorkOrder> _workOrderList,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkOrder_Priority_Filter");
		builder = builder.withParam("WorkOrderList", _workOrderList);
		builder = builder.withParam("FilterHelper", _filterHelper);
		return builder;
	}

	public static java.util.List<work_management.proxies.WorkOrder> sUB_WorkOrder_Priority_Filter(
		IContext context,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList,
		work_management.proxies.FilterHelper _filterHelper
	)
	{
		Object result = sUB_WorkOrder_Priority_FilterBuilder(
				_workOrderList,
				_filterHelper
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> work_management.proxies.WorkOrder.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkOrderCode_GenerateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkOrderCode_Generate");
		return builder;
	}

	public static java.lang.String sUB_WorkOrderCode_Generate(IContext context)
	{
		Object result = sUB_WorkOrderCode_GenerateBuilder().execute(context);
		return (java.lang.String) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkOrderSearchHelper_TempBuilder(
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkOrderSearchHelper_Temp");
		builder = builder.withParam("WorkOrderPageHelper", _workOrderPageHelper);
		return builder;
	}

	public static void sUB_WorkOrderSearchHelper_Temp(
		IContext context,
		work_management.proxies.WorkOrderPageHelper _workOrderPageHelper
	)
	{
		sUB_WorkOrderSearchHelper_TempBuilder(
				_workOrderPageHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkRequest_Status_CountBuilder(
		java.util.List<work_management.proxies.WorkOrder> _workOrderList,
		work_management.proxies.WorkOrderCount _newWorkOrderCountHelper
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.SUB_WorkRequest_Status_Count");
		builder = builder.withParam("WorkOrderList", _workOrderList);
		builder = builder.withParam("NewWorkOrderCountHelper", _newWorkOrderCountHelper);
		return builder;
	}

	public static void sUB_WorkRequest_Status_Count(
		IContext context,
		java.util.List<work_management.proxies.WorkOrder> _workOrderList,
		work_management.proxies.WorkOrderCount _newWorkOrderCountHelper
	)
	{
		sUB_WorkRequest_Status_CountBuilder(
				_workOrderList,
				_newWorkOrderCountHelper
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder tempBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Work_Management.temp");
		return builder;
	}

	public static void temp(IContext context)
	{
		tempBuilder().execute(context);
	}
}
