// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package work_management.proxies;

/**
 * 최초 작성자 : 박성안
 * 최초 작성일 : 2023/11/6
 * 설명 : WorkOrder Kanban 필터 팝업에 여러 설비를 검색할 수 있게 하기 위한 엔터티
 * Version 1.0 : 생성
 */
public class UserHelper implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject userHelperMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Work_Management.UserHelper";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		User("User"),
		UserHelper_FilterHelper("Work_Management.UserHelper_FilterHelper");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public UserHelper(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected UserHelper(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject userHelperMendixObject)
	{
		if (userHelperMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, userHelperMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.userHelperMendixObject = userHelperMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static work_management.proxies.UserHelper initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new work_management.proxies.UserHelper(context, mendixObject);
	}

	public static work_management.proxies.UserHelper load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return work_management.proxies.UserHelper.initialize(context, mendixObject);
	}

	/**
	 * @return value of User
	 */
	public final java.lang.String getUser()
	{
		return getUser(getContext());
	}

	/**
	 * @param context
	 * @return value of User
	 */
	public final java.lang.String getUser(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.User.toString());
	}

	/**
	 * Set value of User
	 * @param user
	 */
	public final void setUser(java.lang.String user)
	{
		setUser(getContext(), user);
	}

	/**
	 * Set value of User
	 * @param context
	 * @param user
	 */
	public final void setUser(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String user)
	{
		getMendixObject().setValue(context, MemberNames.User.toString(), user);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of UserHelper_FilterHelper
	 */
	public final work_management.proxies.FilterHelper getUserHelper_FilterHelper() throws com.mendix.core.CoreException
	{
		return getUserHelper_FilterHelper(getContext());
	}

	/**
	 * @param context
	 * @return value of UserHelper_FilterHelper
	 * @throws com.mendix.core.CoreException
	 */
	public final work_management.proxies.FilterHelper getUserHelper_FilterHelper(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		work_management.proxies.FilterHelper result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UserHelper_FilterHelper.toString());
		if (identifier != null) {
			result = work_management.proxies.FilterHelper.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of UserHelper_FilterHelper
	 * @param userhelper_filterhelper
	 */
	public final void setUserHelper_FilterHelper(work_management.proxies.FilterHelper userhelper_filterhelper)
	{
		setUserHelper_FilterHelper(getContext(), userhelper_filterhelper);
	}

	/**
	 * Set value of UserHelper_FilterHelper
	 * @param context
	 * @param userhelper_filterhelper
	 */
	public final void setUserHelper_FilterHelper(com.mendix.systemwideinterfaces.core.IContext context, work_management.proxies.FilterHelper userhelper_filterhelper)
	{
		if (userhelper_filterhelper == null) {
			getMendixObject().setValue(context, MemberNames.UserHelper_FilterHelper.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.UserHelper_FilterHelper.toString(), userhelper_filterhelper.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return userHelperMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final work_management.proxies.UserHelper that = (work_management.proxies.UserHelper) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
