// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package commons.proxies;

/**
 * 최초 작성자 : 김동명
 * 최초 작성일 : 2023/09/07
 * 최종 수정자 : 이단비
 * 최종 수정일 : 2023/10/06
 * 설명 : 회사 정보를 가지기 위한 테이블
 * Version 1.1 : Version 컬럼 삭제 및 Version_StandardCode Association 추가 // 이단비
 * Version 1.0 : 생성
 */
public class Company implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject companyMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Commons.Company";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CompanyName("CompanyName"),
		InstallationStatus("InstallationStatus"),
		Version_StandardCode("Commons.Version_StandardCode");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Company(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Company(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject companyMendixObject)
	{
		if (companyMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, companyMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.companyMendixObject = companyMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static commons.proxies.Company initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new commons.proxies.Company(context, mendixObject);
	}

	public static commons.proxies.Company load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return commons.proxies.Company.initialize(context, mendixObject);
	}

	public static java.util.List<commons.proxies.Company> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> commons.proxies.Company.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of CompanyName
	 */
	public final java.lang.String getCompanyName()
	{
		return getCompanyName(getContext());
	}

	/**
	 * @param context
	 * @return value of CompanyName
	 */
	public final java.lang.String getCompanyName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CompanyName.toString());
	}

	/**
	 * Set value of CompanyName
	 * @param companyname
	 */
	public final void setCompanyName(java.lang.String companyname)
	{
		setCompanyName(getContext(), companyname);
	}

	/**
	 * Set value of CompanyName
	 * @param context
	 * @param companyname
	 */
	public final void setCompanyName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String companyname)
	{
		getMendixObject().setValue(context, MemberNames.CompanyName.toString(), companyname);
	}

	/**
	 * @return value of InstallationStatus
	 */
	public final java.lang.String getInstallationStatus()
	{
		return getInstallationStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of InstallationStatus
	 */
	public final java.lang.String getInstallationStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InstallationStatus.toString());
	}

	/**
	 * Set value of InstallationStatus
	 * @param installationstatus
	 */
	public final void setInstallationStatus(java.lang.String installationstatus)
	{
		setInstallationStatus(getContext(), installationstatus);
	}

	/**
	 * Set value of InstallationStatus
	 * @param context
	 * @param installationstatus
	 */
	public final void setInstallationStatus(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String installationstatus)
	{
		getMendixObject().setValue(context, MemberNames.InstallationStatus.toString(), installationstatus);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Version_StandardCode
	 */
	public final commons.proxies.StandardCode getVersion_StandardCode() throws com.mendix.core.CoreException
	{
		return getVersion_StandardCode(getContext());
	}

	/**
	 * @param context
	 * @return value of Version_StandardCode
	 * @throws com.mendix.core.CoreException
	 */
	public final commons.proxies.StandardCode getVersion_StandardCode(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		commons.proxies.StandardCode result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Version_StandardCode.toString());
		if (identifier != null) {
			result = commons.proxies.StandardCode.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Version_StandardCode
	 * @param version_standardcode
	 */
	public final void setVersion_StandardCode(commons.proxies.StandardCode version_standardcode)
	{
		setVersion_StandardCode(getContext(), version_standardcode);
	}

	/**
	 * Set value of Version_StandardCode
	 * @param context
	 * @param version_standardcode
	 */
	public final void setVersion_StandardCode(com.mendix.systemwideinterfaces.core.IContext context, commons.proxies.StandardCode version_standardcode)
	{
		if (version_standardcode == null) {
			getMendixObject().setValue(context, MemberNames.Version_StandardCode.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Version_StandardCode.toString(), version_standardcode.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return companyMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final commons.proxies.Company that = (commons.proxies.Company) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
