// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package commons.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the Commons module
	/**
	 * 최초작성자 : 김동명
	 * 최초작성일 : 2023/10/26
	 * 최종수정자 : 
	 * 최종수정일 :
	 * 
	 * 설명 : 구글 SSO config설정 원클릭화
	 * 
	 * V1.0 : 최초생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_GoogleSSO_SettingBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.ACT_GoogleSSO_Setting");
		return builder;
	}

	/**
	 * 최초작성자 : 김동명
	 * 최초작성일 : 2023/10/26
	 * 최종수정자 : 
	 * 최종수정일 :
	 * 
	 * 설명 : 구글 SSO config설정 원클릭화
	 * 
	 * V1.0 : 최초생성
	 */
	public static void aCT_GoogleSSO_Setting(IContext context)
	{
		aCT_GoogleSSO_SettingBuilder().execute(context);
	}
	/**
	 * 최초작성자 : 김동명
	 * 최초작성일 : 2023-11-27
	 * 
	 * 설명 : 시작시 필요한 기본 세팅을 MF로 실행
	 * 
	 * V1.0 최초작성 및 Google SSO 세팅
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aSU_MFBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.ASU_MF");
		return builder;
	}

	/**
	 * 최초작성자 : 김동명
	 * 최초작성일 : 2023-11-27
	 * 
	 * 설명 : 시작시 필요한 기본 세팅을 MF로 실행
	 * 
	 * V1.0 최초작성 및 Google SSO 세팅
	 */
	public static boolean aSU_MF(IContext context)
	{
		Object result = aSU_MFBuilder().execute(context);
		return (boolean) result;
	}
	/**
	 * 최초 작성자 : 김동명
	 * 최초 작성일 : 2023/09/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/09/06
	 * 설명 : 트리뷰 사용을 위한 TemplateGrid 회사 DS용 다른 목적 x
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Company_DataContainer_For_TreeviewBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.DS_Company_DataContainer_For_Treeview");
		return builder;
	}

	/**
	 * 최초 작성자 : 김동명
	 * 최초 작성일 : 2023/09/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/09/06
	 * 설명 : 트리뷰 사용을 위한 TemplateGrid 회사 DS용 다른 목적 x
	 * Version 1.0 : 생성
	 */
	public static java.util.List<commons.proxies.Company> dS_Company_DataContainer_For_Treeview(IContext context)
	{
		Object result = dS_Company_DataContainer_For_TreeviewBuilder().execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> commons.proxies.Company.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Dummy_StepBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.DS_Dummy_Step");
		return builder;
	}

	public static void dS_Dummy_Step(IContext context)
	{
		dS_Dummy_StepBuilder().execute(context);
	}
	/**
	 * 최초 작성자 : 김동명
	 * 최초 작성일 : 2023/09/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/09/06
	 * 설명 : 트리뷰 사용을 위한 TemplateGrid 공장 DS용 다른 목적 x
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_Plant_DataContainer_For_TreeviewBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.DS_Plant_DataContainer_For_Treeview");
		return builder;
	}

	/**
	 * 최초 작성자 : 김동명
	 * 최초 작성일 : 2023/09/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/09/06
	 * 설명 : 트리뷰 사용을 위한 TemplateGrid 공장 DS용 다른 목적 x
	 * Version 1.0 : 생성
	 */
	public static java.util.List<cmms_administration.proxies.Plant> dS_Plant_DataContainer_For_Treeview(IContext context)
	{
		Object result = dS_Plant_DataContainer_For_TreeviewBuilder().execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> cmms_administration.proxies.Plant.initialize(context, obj));
	}
	/**
	 * 최초 작성자 : 김동명
	 * 최초 작성일 : 2023/09/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/09/06
	 * 설명 : 하위메뉴포함 버튼을 생성하기위한 Dataview DS
	 * 
	 * Version 1.0 : 생성
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_SubIncludeBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.DS_SubInclude");
		return builder;
	}

	/**
	 * 최초 작성자 : 김동명
	 * 최초 작성일 : 2023/09/06
	 * 최종 수정자 : 
	 * 최종 수정일 : 2023/09/06
	 * 설명 : 하위메뉴포함 버튼을 생성하기위한 Dataview DS
	 * 
	 * Version 1.0 : 생성
	 */
	public static commons.proxies.SubInclude dS_SubInclude(IContext context)
	{
		Object result = dS_SubIncludeBuilder().execute(context);
		return result == null ? null : commons.proxies.SubInclude.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_CompanyBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_Company");
		return builder;
	}

	public static void dummy_Company(IContext context)
	{
		dummy_CompanyBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_DepartmentBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_Department");
		return builder;
	}

	public static void dummy_Department(IContext context)
	{
		dummy_DepartmentBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_EmployeeBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_Employee");
		return builder;
	}

	public static void dummy_Employee(IContext context)
	{
		dummy_EmployeeBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_EquipmentBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_Equipment");
		return builder;
	}

	public static void dummy_Equipment(IContext context)
	{
		dummy_EquipmentBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_EquipmentLocationBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_EquipmentLocation");
		return builder;
	}

	public static void dummy_EquipmentLocation(IContext context)
	{
		dummy_EquipmentLocationBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_EquipmentTypeBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_EquipmentType");
		return builder;
	}

	public static void dummy_EquipmentType(IContext context)
	{
		dummy_EquipmentTypeBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_MaterialTypeBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_MaterialType");
		return builder;
	}

	public static void dummy_MaterialType(IContext context)
	{
		dummy_MaterialTypeBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_PartnerBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_Partner");
		return builder;
	}

	public static void dummy_Partner(IContext context)
	{
		dummy_PartnerBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_PlantBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_Plant");
		return builder;
	}

	public static void dummy_Plant(IContext context)
	{
		dummy_PlantBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_StandardCode_CommonBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_StandardCode_Common");
		return builder;
	}

	public static void dummy_StandardCode_Common(IContext context)
	{
		dummy_StandardCode_CommonBuilder().execute(context);
	}
	/**
	 * user -> account 변경
	 * 박재훈 09-26
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dummy_UserBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.Dummy_User");
		return builder;
	}

	/**
	 * user -> account 변경
	 * 박재훈 09-26
	 */
	public static void dummy_User(IContext context)
	{
		dummy_UserBuilder().execute(context);
	}
	/**
	 * 최초작성자 : 김동명
	 * 최초작성일 : 2023/09/20
	 * 최종수정자 : 
	 * 최종수정일 : 
	 * 
	 * 설명 : 개별화를위한 Account MF
	 * 
	 * V 1.1 : 개별화 로직 적용 // 2023.09/20 김동명
	 */
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder getCurrentAccountBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.GetCurrentAccount");
		return builder;
	}

	/**
	 * 최초작성자 : 김동명
	 * 최초작성일 : 2023/09/20
	 * 최종수정자 : 
	 * 최종수정일 : 
	 * 
	 * 설명 : 개별화를위한 Account MF
	 * 
	 * V 1.1 : 개별화 로직 적용 // 2023.09/20 김동명
	 */
	public static administration.proxies.Account getCurrentAccount(IContext context)
	{
		Object result = getCurrentAccountBuilder().execute(context);
		return result == null ? null : administration.proxies.Account.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sCE_Daily_2amBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("Commons.SCE_Daily_2am");
		return builder;
	}

	public static void sCE_Daily_2am(IContext context)
	{
		sCE_Daily_2amBuilder().execute(context);
	}
}
