// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package commons.proxies;

/**
 * 최초 작성자 : 이단비
 * 최초 작성일 : 2023/08/30
 * 최종 수정자 : 이단비
 * 최종 수정일 : 2023/10/06
 * 설명 : 표준 기준코드의 종류(Type Grouping)를 담는 엔터티
 * Version 1.2 : 서브 엔터티 삭제에 따른 subtype 컬럼 삭제
 * Version 1.1 : 기준코드타입 영문명 생성
 * Version 1.0 : 생성
 */
public class CodeType implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject codeTypeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Commons.CodeType";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		CodeType("CodeType"),
		CodeTypeSequence("CodeTypeSequence"),
		CodeTypeName("CodeTypeName"),
		CodeTypeNameEnglish("CodeTypeNameEnglish"),
		CodeTypeDescription("CodeTypeDescription"),
		IsForDeveloper("IsForDeveloper"),
		IsCodeTypeActive("IsCodeTypeActive"),
		CodeType_CodeTypeHelper("Commons.CodeType_CodeTypeHelper");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CodeType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected CodeType(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject codeTypeMendixObject)
	{
		if (codeTypeMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, codeTypeMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.codeTypeMendixObject = codeTypeMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static commons.proxies.CodeType initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new commons.proxies.CodeType(context, mendixObject);
	}

	public static commons.proxies.CodeType load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return commons.proxies.CodeType.initialize(context, mendixObject);
	}

	public static java.util.List<commons.proxies.CodeType> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> commons.proxies.CodeType.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of CodeType
	 */
	public final java.lang.String getCodeType()
	{
		return getCodeType(getContext());
	}

	/**
	 * @param context
	 * @return value of CodeType
	 */
	public final java.lang.String getCodeType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CodeType.toString());
	}

	/**
	 * Set value of CodeType
	 * @param codetype
	 */
	public final void setCodeType(java.lang.String codetype)
	{
		setCodeType(getContext(), codetype);
	}

	/**
	 * Set value of CodeType
	 * @param context
	 * @param codetype
	 */
	public final void setCodeType(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String codetype)
	{
		getMendixObject().setValue(context, MemberNames.CodeType.toString(), codetype);
	}

	/**
	 * @return value of CodeTypeSequence
	 */
	public final java.lang.Integer getCodeTypeSequence()
	{
		return getCodeTypeSequence(getContext());
	}

	/**
	 * @param context
	 * @return value of CodeTypeSequence
	 */
	public final java.lang.Integer getCodeTypeSequence(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.CodeTypeSequence.toString());
	}

	/**
	 * Set value of CodeTypeSequence
	 * @param codetypesequence
	 */
	public final void setCodeTypeSequence(java.lang.Integer codetypesequence)
	{
		setCodeTypeSequence(getContext(), codetypesequence);
	}

	/**
	 * Set value of CodeTypeSequence
	 * @param context
	 * @param codetypesequence
	 */
	public final void setCodeTypeSequence(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer codetypesequence)
	{
		getMendixObject().setValue(context, MemberNames.CodeTypeSequence.toString(), codetypesequence);
	}

	/**
	 * @return value of CodeTypeName
	 */
	public final java.lang.String getCodeTypeName()
	{
		return getCodeTypeName(getContext());
	}

	/**
	 * @param context
	 * @return value of CodeTypeName
	 */
	public final java.lang.String getCodeTypeName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CodeTypeName.toString());
	}

	/**
	 * Set value of CodeTypeName
	 * @param codetypename
	 */
	public final void setCodeTypeName(java.lang.String codetypename)
	{
		setCodeTypeName(getContext(), codetypename);
	}

	/**
	 * Set value of CodeTypeName
	 * @param context
	 * @param codetypename
	 */
	public final void setCodeTypeName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String codetypename)
	{
		getMendixObject().setValue(context, MemberNames.CodeTypeName.toString(), codetypename);
	}

	/**
	 * @return value of CodeTypeNameEnglish
	 */
	public final java.lang.String getCodeTypeNameEnglish()
	{
		return getCodeTypeNameEnglish(getContext());
	}

	/**
	 * @param context
	 * @return value of CodeTypeNameEnglish
	 */
	public final java.lang.String getCodeTypeNameEnglish(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CodeTypeNameEnglish.toString());
	}

	/**
	 * Set value of CodeTypeNameEnglish
	 * @param codetypenameenglish
	 */
	public final void setCodeTypeNameEnglish(java.lang.String codetypenameenglish)
	{
		setCodeTypeNameEnglish(getContext(), codetypenameenglish);
	}

	/**
	 * Set value of CodeTypeNameEnglish
	 * @param context
	 * @param codetypenameenglish
	 */
	public final void setCodeTypeNameEnglish(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String codetypenameenglish)
	{
		getMendixObject().setValue(context, MemberNames.CodeTypeNameEnglish.toString(), codetypenameenglish);
	}

	/**
	 * @return value of CodeTypeDescription
	 */
	public final java.lang.String getCodeTypeDescription()
	{
		return getCodeTypeDescription(getContext());
	}

	/**
	 * @param context
	 * @return value of CodeTypeDescription
	 */
	public final java.lang.String getCodeTypeDescription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CodeTypeDescription.toString());
	}

	/**
	 * Set value of CodeTypeDescription
	 * @param codetypedescription
	 */
	public final void setCodeTypeDescription(java.lang.String codetypedescription)
	{
		setCodeTypeDescription(getContext(), codetypedescription);
	}

	/**
	 * Set value of CodeTypeDescription
	 * @param context
	 * @param codetypedescription
	 */
	public final void setCodeTypeDescription(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String codetypedescription)
	{
		getMendixObject().setValue(context, MemberNames.CodeTypeDescription.toString(), codetypedescription);
	}

	/**
	 * @return value of IsForDeveloper
	 */
	public final java.lang.Boolean getIsForDeveloper()
	{
		return getIsForDeveloper(getContext());
	}

	/**
	 * @param context
	 * @return value of IsForDeveloper
	 */
	public final java.lang.Boolean getIsForDeveloper(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsForDeveloper.toString());
	}

	/**
	 * Set value of IsForDeveloper
	 * @param isfordeveloper
	 */
	public final void setIsForDeveloper(java.lang.Boolean isfordeveloper)
	{
		setIsForDeveloper(getContext(), isfordeveloper);
	}

	/**
	 * Set value of IsForDeveloper
	 * @param context
	 * @param isfordeveloper
	 */
	public final void setIsForDeveloper(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isfordeveloper)
	{
		getMendixObject().setValue(context, MemberNames.IsForDeveloper.toString(), isfordeveloper);
	}

	/**
	 * @return value of IsCodeTypeActive
	 */
	public final java.lang.Boolean getIsCodeTypeActive()
	{
		return getIsCodeTypeActive(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCodeTypeActive
	 */
	public final java.lang.Boolean getIsCodeTypeActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCodeTypeActive.toString());
	}

	/**
	 * Set value of IsCodeTypeActive
	 * @param iscodetypeactive
	 */
	public final void setIsCodeTypeActive(java.lang.Boolean iscodetypeactive)
	{
		setIsCodeTypeActive(getContext(), iscodetypeactive);
	}

	/**
	 * Set value of IsCodeTypeActive
	 * @param context
	 * @param iscodetypeactive
	 */
	public final void setIsCodeTypeActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iscodetypeactive)
	{
		getMendixObject().setValue(context, MemberNames.IsCodeTypeActive.toString(), iscodetypeactive);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of CodeType_CodeTypeHelper
	 */
	public final commons.proxies.CodeTypeHelper getCodeType_CodeTypeHelper() throws com.mendix.core.CoreException
	{
		return getCodeType_CodeTypeHelper(getContext());
	}

	/**
	 * @param context
	 * @return value of CodeType_CodeTypeHelper
	 * @throws com.mendix.core.CoreException
	 */
	public final commons.proxies.CodeTypeHelper getCodeType_CodeTypeHelper(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		commons.proxies.CodeTypeHelper result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.CodeType_CodeTypeHelper.toString());
		if (identifier != null) {
			result = commons.proxies.CodeTypeHelper.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of CodeType_CodeTypeHelper
	 * @param codetype_codetypehelper
	 */
	public final void setCodeType_CodeTypeHelper(commons.proxies.CodeTypeHelper codetype_codetypehelper)
	{
		setCodeType_CodeTypeHelper(getContext(), codetype_codetypehelper);
	}

	/**
	 * Set value of CodeType_CodeTypeHelper
	 * @param context
	 * @param codetype_codetypehelper
	 */
	public final void setCodeType_CodeTypeHelper(com.mendix.systemwideinterfaces.core.IContext context, commons.proxies.CodeTypeHelper codetype_codetypehelper)
	{
		if (codetype_codetypehelper == null) {
			getMendixObject().setValue(context, MemberNames.CodeType_CodeTypeHelper.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.CodeType_CodeTypeHelper.toString(), codetype_codetypehelper.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return codeTypeMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final commons.proxies.CodeType that = (commons.proxies.CodeType) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
