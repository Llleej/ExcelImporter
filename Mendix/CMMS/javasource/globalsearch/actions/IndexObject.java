// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package globalsearch.actions;

import org.apache.lucene.document.Document;
import org.apache.lucene.facet.FacetsConfig;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.Term;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import communitycommons.ORM;
import globalsearch.supportfunctions.DirectoryCreator;
import globalsearch.supportfunctions.IndexHelper;

public class IndexObject extends CustomJavaAction<java.lang.Boolean>
{
	private final IMendixObject ObjectToIndex;
	private final java.lang.Boolean UseAdvancedIndexing;
	private final java.lang.String JSONBody;
	/** @deprecated use com.mendix.utils.ListUtils.map(Facets, com.mendix.systemwideinterfaces.core.IEntityProxy::getMendixObject) instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final java.util.List<IMendixObject> __Facets;
	private final java.util.List<globalsearch.proxies.Facet> Facets;

	public IndexObject(
		IContext context,
		IMendixObject _objectToIndex,
		java.lang.Boolean _useAdvancedIndexing,
		java.lang.String _jSONBody,
		java.util.List<IMendixObject> _facets
	)
	{
		super(context);
		this.ObjectToIndex = _objectToIndex;
		this.UseAdvancedIndexing = _useAdvancedIndexing;
		this.JSONBody = _jSONBody;
		this.__Facets = _facets;
		this.Facets = java.util.Optional.ofNullable(_facets)
			.orElse(java.util.Collections.emptyList())
			.stream()
			.map(facetsElement -> globalsearch.proxies.Facet.initialize(getContext(), facetsElement))
			.collect(java.util.stream.Collectors.toList());
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		if(UseAdvancedIndexing == null) return false;
		if(UseAdvancedIndexing && (JSONBody.isBlank() || JSONBody.isEmpty() || JSONBody == null)) return false;
		if(ObjectToIndex == null) return false;
		
		ILogNode LOG = Core.getLogger("GlobalSearch");
		String directory = DirectoryCreator.getDirectory();
		// Instantiate the index writer.
		IndexWriter writer = DirectoryCreator.createWriter(directory);
		// Delete index if it already existed.
		String GUID = ORM.getGUID(ObjectToIndex).toString();
		writer.deleteDocuments(new Term("id", GUID));
		writer.commit();
		boolean success = true;
		try {
			success = createIndex(LOG, GUID, writer);
		}catch(Exception e) {
			success = false;
		}
		return success;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "IndexObject";
	}

	// BEGIN EXTRA CODE
	private boolean createIndex(ILogNode LOG, String GUID, IndexWriter writer) throws Exception {

		LOG.debug("Indexing object with id: " + GUID);
		FacetsConfig config = new FacetsConfig();
		// Create document.
		Document luceneDocument = null;
				
		if(!UseAdvancedIndexing) luceneDocument = IndexHelper.createBasic(ObjectToIndex, this.getContext(), config, Facets);
		else luceneDocument = IndexHelper.createAdvanced(ObjectToIndex, this.getContext(), config, Facets, JSONBody);
		// Add the created document to the index.
		if (luceneDocument != null) {
			writer.addDocument((config.build(luceneDocument)));
		}
		// Returns a number other than -1 if the index has been properly processed.
		long writerSuccessful = writer.commit();
		writer.forceMerge(1);
		if(writerSuccessful != -1) LOG.debug("Finished indexing object with id: " + GUID);
		else LOG.debug("Failed to index object with id: " + GUID);
		
		return writerSuccessful != -1;
	}
	// END EXTRA CODE
}
