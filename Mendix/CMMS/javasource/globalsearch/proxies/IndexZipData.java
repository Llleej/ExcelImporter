// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package globalsearch.proxies;

/**
 * This entity holds the indexed data during redeployment. 
 * 
 * - Content created before shutdown. 
 * - Contend pushed back to the temp folder after startup.
 */
public class IndexZipData extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "GlobalSearch.IndexZipData";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SequenceNumber("SequenceNumber"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public IndexZipData(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected IndexZipData(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject indexZipDataMendixObject)
	{
		super(context, indexZipDataMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, indexZipDataMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static globalsearch.proxies.IndexZipData initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new globalsearch.proxies.IndexZipData(context, mendixObject);
	}

	public static globalsearch.proxies.IndexZipData load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return globalsearch.proxies.IndexZipData.initialize(context, mendixObject);
	}

	public static java.util.List<globalsearch.proxies.IndexZipData> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> globalsearch.proxies.IndexZipData.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of SequenceNumber
	 */
	public final java.lang.Integer getSequenceNumber()
	{
		return getSequenceNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of SequenceNumber
	 */
	public final java.lang.Integer getSequenceNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.SequenceNumber.toString());
	}

	/**
	 * Set value of SequenceNumber
	 * @param sequencenumber
	 */
	public final void setSequenceNumber(java.lang.Integer sequencenumber)
	{
		setSequenceNumber(getContext(), sequencenumber);
	}

	/**
	 * Set value of SequenceNumber
	 * @param context
	 * @param sequencenumber
	 */
	public final void setSequenceNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sequencenumber)
	{
		getMendixObject().setValue(context, MemberNames.SequenceNumber.toString(), sequencenumber);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final globalsearch.proxies.IndexZipData that = (globalsearch.proxies.IndexZipData) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
