// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package development_settings.proxies;

public class RMhelper implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject rMhelperMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Development_Settings.RMhelper";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		RMhelper_Menu("Development_Settings.RMhelper_Menu"),
		RMhelper_StandardCode("Development_Settings.RMhelper_StandardCode");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public RMhelper(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected RMhelper(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject rMhelperMendixObject)
	{
		if (rMhelperMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, rMhelperMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.rMhelperMendixObject = rMhelperMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static development_settings.proxies.RMhelper initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new development_settings.proxies.RMhelper(context, mendixObject);
	}

	public static development_settings.proxies.RMhelper load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return development_settings.proxies.RMhelper.initialize(context, mendixObject);
	}

	public static java.util.List<development_settings.proxies.RMhelper> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> development_settings.proxies.RMhelper.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of RMhelper_Menu
	 */
	public final development_settings.proxies.Menu getRMhelper_Menu() throws com.mendix.core.CoreException
	{
		return getRMhelper_Menu(getContext());
	}

	/**
	 * @param context
	 * @return value of RMhelper_Menu
	 * @throws com.mendix.core.CoreException
	 */
	public final development_settings.proxies.Menu getRMhelper_Menu(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		development_settings.proxies.Menu result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RMhelper_Menu.toString());
		if (identifier != null) {
			result = development_settings.proxies.Menu.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of RMhelper_Menu
	 * @param rmhelper_menu
	 */
	public final void setRMhelper_Menu(development_settings.proxies.Menu rmhelper_menu)
	{
		setRMhelper_Menu(getContext(), rmhelper_menu);
	}

	/**
	 * Set value of RMhelper_Menu
	 * @param context
	 * @param rmhelper_menu
	 */
	public final void setRMhelper_Menu(com.mendix.systemwideinterfaces.core.IContext context, development_settings.proxies.Menu rmhelper_menu)
	{
		if (rmhelper_menu == null) {
			getMendixObject().setValue(context, MemberNames.RMhelper_Menu.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.RMhelper_Menu.toString(), rmhelper_menu.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of RMhelper_StandardCode
	 */
	public final commons.proxies.StandardCode getRMhelper_StandardCode() throws com.mendix.core.CoreException
	{
		return getRMhelper_StandardCode(getContext());
	}

	/**
	 * @param context
	 * @return value of RMhelper_StandardCode
	 * @throws com.mendix.core.CoreException
	 */
	public final commons.proxies.StandardCode getRMhelper_StandardCode(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		commons.proxies.StandardCode result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.RMhelper_StandardCode.toString());
		if (identifier != null) {
			result = commons.proxies.StandardCode.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of RMhelper_StandardCode
	 * @param rmhelper_standardcode
	 */
	public final void setRMhelper_StandardCode(commons.proxies.StandardCode rmhelper_standardcode)
	{
		setRMhelper_StandardCode(getContext(), rmhelper_standardcode);
	}

	/**
	 * Set value of RMhelper_StandardCode
	 * @param context
	 * @param rmhelper_standardcode
	 */
	public final void setRMhelper_StandardCode(com.mendix.systemwideinterfaces.core.IContext context, commons.proxies.StandardCode rmhelper_standardcode)
	{
		if (rmhelper_standardcode == null) {
			getMendixObject().setValue(context, MemberNames.RMhelper_StandardCode.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.RMhelper_StandardCode.toString(), rmhelper_standardcode.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return rMhelperMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final development_settings.proxies.RMhelper that = (development_settings.proxies.RMhelper) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
