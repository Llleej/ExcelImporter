// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mypage.proxies;

/**
 * 최초 작성자 : 이슬기
 * 최초 작성일 : 2023/11/20
 * 최종 수정자 : 
 * 최종 수정일 : 
 * 설명 : 즐겨찾기 페이지 엔터티
 * Version 1.0 : 생성
 */
public class MyFavorite implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject myFavoriteMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyPage.MyFavorite";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		PageName("PageName"),
		MyFavorite_Employee("MyPage.MyFavorite_Employee");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MyFavorite(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected MyFavorite(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject myFavoriteMendixObject)
	{
		if (myFavoriteMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, myFavoriteMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.myFavoriteMendixObject = myFavoriteMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static mypage.proxies.MyFavorite initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new mypage.proxies.MyFavorite(context, mendixObject);
	}

	public static mypage.proxies.MyFavorite load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return mypage.proxies.MyFavorite.initialize(context, mendixObject);
	}

	public static java.util.List<mypage.proxies.MyFavorite> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> mypage.proxies.MyFavorite.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of PageName
	 */
	public final java.lang.String getPageName()
	{
		return getPageName(getContext());
	}

	/**
	 * @param context
	 * @return value of PageName
	 */
	public final java.lang.String getPageName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.PageName.toString());
	}

	/**
	 * Set value of PageName
	 * @param pagename
	 */
	public final void setPageName(java.lang.String pagename)
	{
		setPageName(getContext(), pagename);
	}

	/**
	 * Set value of PageName
	 * @param context
	 * @param pagename
	 */
	public final void setPageName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String pagename)
	{
		getMendixObject().setValue(context, MemberNames.PageName.toString(), pagename);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of MyFavorite_Employee
	 */
	public final cmms_administration.proxies.Employee getMyFavorite_Employee() throws com.mendix.core.CoreException
	{
		return getMyFavorite_Employee(getContext());
	}

	/**
	 * @param context
	 * @return value of MyFavorite_Employee
	 * @throws com.mendix.core.CoreException
	 */
	public final cmms_administration.proxies.Employee getMyFavorite_Employee(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		cmms_administration.proxies.Employee result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.MyFavorite_Employee.toString());
		if (identifier != null) {
			result = cmms_administration.proxies.Employee.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of MyFavorite_Employee
	 * @param myfavorite_employee
	 */
	public final void setMyFavorite_Employee(cmms_administration.proxies.Employee myfavorite_employee)
	{
		setMyFavorite_Employee(getContext(), myfavorite_employee);
	}

	/**
	 * Set value of MyFavorite_Employee
	 * @param context
	 * @param myfavorite_employee
	 */
	public final void setMyFavorite_Employee(com.mendix.systemwideinterfaces.core.IContext context, cmms_administration.proxies.Employee myfavorite_employee)
	{
		if (myfavorite_employee == null) {
			getMendixObject().setValue(context, MemberNames.MyFavorite_Employee.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.MyFavorite_Employee.toString(), myfavorite_employee.getMendixObject().getId());
		}
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return myFavoriteMendixObject;
	}

	@Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final mypage.proxies.MyFavorite that = (mypage.proxies.MyFavorite) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
